{"version":3,"file":"base.esm.js","sources":["../src/chain/IChainInterface.ts","../src/chain/config.ts","../src/errors/index.ts","../src/wallet/index.ts","../src/adapter/IAdapter.ts","../src/constants.ts","../src/loglevel.ts","../src/utils.ts","../src/adapter/utils.ts","../src/provider/IProvider.ts"],"sourcesContent":["export const CHAIN_NAMESPACES = {\n  EIP155: \"eip155\",\n  SOLANA: \"solana\",\n  OTHER: \"other\",\n} as const;\n// eip155 for all evm chains\nexport type ChainNamespaceType = (typeof CHAIN_NAMESPACES)[keyof typeof CHAIN_NAMESPACES];\n\nexport const ADAPTER_NAMESPACES = {\n  EIP155: \"eip155\",\n  SOLANA: \"solana\",\n  XRPL: \"xrpl\",\n  MULTICHAIN: \"multichain\",\n} as const;\n// eip155 for all evm chains\nexport type AdapterNamespaceType = (typeof ADAPTER_NAMESPACES)[keyof typeof ADAPTER_NAMESPACES];\n\nexport type CustomChainConfig = {\n  chainNamespace: ChainNamespaceType;\n  /**\n   * The chain id of the chain\n   */\n  chainId: string;\n  /**\n   * RPC target Url for the chain\n   */\n  rpcTarget: string;\n\n  /**\n   * web socket target Url for the chain\n   */\n  wsTarget?: string;\n\n  /**\n   * Display Name for the chain\n   */\n  displayName: string;\n  /**\n   * Url of the block explorer\n   */\n  blockExplorer: string;\n  /**\n   * Default currency ticker of the network (e.g: ETH)\n   */\n  ticker: string;\n  /**\n   * Name for currency ticker (e.g: `Ethereum`)\n   */\n  tickerName: string;\n  /**\n   * Number of decimals for the currency ticker (e.g: 18)\n   */\n  decimals?: number;\n};\n","import { CHAIN_NAMESPACES, ChainNamespaceType, CustomChainConfig } from \"./IChainInterface\";\nconst getDefaultNetworkId = (chainNamespace: ChainNamespaceType): number => {\n  if (chainNamespace === CHAIN_NAMESPACES.EIP155) {\n    return 1;\n  } else if (chainNamespace === CHAIN_NAMESPACES.SOLANA) {\n    return 1;\n  }\n  throw new Error(`Chain namespace ${chainNamespace} is not supported`);\n};\n\nexport const getEvmChainConfig = (chainId: number): CustomChainConfig | null => {\n  const chainNamespace = CHAIN_NAMESPACES.EIP155;\n  if (chainId === 1) {\n    return {\n      chainNamespace,\n      chainId: \"0x1\",\n      rpcTarget: `https://rpc.ankr.com/eth`,\n      displayName: \"Ethereum Mainnet\",\n      blockExplorer: \"https://etherscan.io/\",\n      ticker: \"ETH\",\n      tickerName: \"Ethereum\",\n      decimals: 18,\n    };\n  }\n  if (chainId === 5) {\n    return {\n      chainNamespace,\n      chainId: \"0x5\",\n      rpcTarget: `https://rpc.ankr.com/eth_goerli`,\n      displayName: \"Goerli Testnet\",\n      blockExplorer: \"https://goerli.etherscan.io/\",\n      ticker: \"ETH\",\n      tickerName: \"Ethereum\",\n      decimals: 18,\n    };\n  }\n  if (chainId === 11155111) {\n    return {\n      chainNamespace,\n      chainId: \"0xaa36a7\",\n      rpcTarget: `https://rpc.ankr.com/eth_sepolia`,\n      displayName: \"Sepolia Testnet\",\n      blockExplorer: \"https://sepolia.etherscan.io/\",\n      ticker: \"ETH\",\n      tickerName: \"Ethereum\",\n      decimals: 18,\n    };\n  }\n  if (chainId === 137) {\n    return {\n      chainNamespace,\n      chainId: \"0x89\",\n      rpcTarget: \"https://rpc.ankr.com/polygon\",\n      displayName: \"Polygon Mainnet\",\n      blockExplorer: \"https://polygonscan.com\",\n      ticker: \"MATIC\",\n      tickerName: \"Polygon\",\n    };\n  }\n  if (chainId === 80001) {\n    return {\n      chainNamespace,\n      chainId: \"0x13881\",\n      rpcTarget: \"https://rpc.ankr.com/polygon_mumbai\",\n      displayName: \"Polygon Mumbai Testnet\",\n      blockExplorer: \"https://mumbai.polygonscan.com/\",\n      ticker: \"MATIC\",\n      tickerName: \"Polygon\",\n      decimals: 18,\n    };\n  }\n  if (chainId === 56) {\n    return {\n      chainNamespace,\n      chainId: \"0x38\",\n      rpcTarget: \"https://rpc.ankr.com/bsc\",\n      displayName: \"Binance SmartChain Mainnet\",\n      blockExplorer: \"https://bscscan.com\",\n      ticker: \"BNB\",\n      tickerName: \"Binance SmartChain\",\n      decimals: 18,\n    };\n  }\n  if (chainId === 97) {\n    return {\n      chainNamespace,\n      chainId: \"0x61\",\n      rpcTarget: \"https://rpc.ankr.com/bsc_testnet_chapel\",\n      displayName: \"Binance SmartChain Testnet\",\n      blockExplorer: \"https://testnet.bscscan.com\",\n      ticker: \"BNB\",\n      tickerName: \"Binance SmartChain\",\n      decimals: 18,\n    };\n  }\n  if (chainId === 25) {\n    return {\n      chainNamespace,\n      chainId: \"0x19\",\n      rpcTarget: \"https://rpc.cronos.org\",\n      displayName: \"Cronos Mainnet\",\n      blockExplorer: \"https://cronoscan.com/\",\n      ticker: \"CRO\",\n      tickerName: \"Cronos\",\n    };\n  }\n  if (chainId === 338) {\n    return {\n      chainNamespace,\n      chainId: \"0x152\",\n      rpcTarget: \"https://rpc-t3.cronos.org/\",\n      displayName: \"Cronos Testnet\",\n      blockExplorer: \"https://cronoscan.com/\",\n      ticker: \"CRO\",\n      tickerName: \"Cronos\",\n      decimals: 18,\n    };\n  }\n  if (chainId === 8217) {\n    return {\n      chainNamespace,\n      chainId: \"0x2019\",\n      rpcTarget: \"https://public-node-api.klaytnapi.com/v1/cypress\",\n      displayName: \"Klaytn Mainnet\",\n      blockExplorer: \"https://scope.klaytn.com\",\n      ticker: \"KLAY\",\n      tickerName: \"Klaytn\",\n      decimals: 18,\n    };\n  }\n\n  return null;\n};\n\nexport const getSolanaChainConfig = (chainId: number): CustomChainConfig | null => {\n  const chainNamespace = CHAIN_NAMESPACES.SOLANA;\n  if (chainId === 1) {\n    return {\n      chainNamespace,\n      chainId: \"0x1\",\n      rpcTarget: \"https://rpc.ankr.com/solana\",\n      displayName: \"Solana Mainnet\",\n      blockExplorer: \"https://explorer.solana.com\",\n      ticker: \"SOL\",\n      tickerName: \"Solana\",\n      decimals: 9,\n    };\n  } else if (chainId === 2) {\n    return {\n      chainNamespace,\n      chainId: \"0x2\",\n      rpcTarget: \"https://api.testnet.solana.com\",\n      displayName: \"Solana Testnet\",\n      blockExplorer: \"https://explorer.solana.com?cluster=testnet\",\n      ticker: \"SOL\",\n      tickerName: \"Solana\",\n      decimals: 9,\n    };\n  } else if (chainId === 3) {\n    return {\n      chainNamespace,\n      chainId: \"0x3\",\n      rpcTarget: \"https://api.devnet.solana.com\",\n      displayName: \"Solana Devnet\",\n      blockExplorer: \"https://explorer.solana.com?cluster=devnet\",\n      ticker: \"SOL\",\n      tickerName: \"Solana\",\n      decimals: 9,\n    };\n  }\n\n  return null;\n};\n\nexport const getChainConfig = (chainNamespace: ChainNamespaceType, chainId?: number | string): CustomChainConfig | null => {\n  if (chainNamespace === CHAIN_NAMESPACES.OTHER) return null;\n  const finalChainId = chainId ? (typeof chainId === \"number\" ? chainId : parseInt(chainId, 16)) : getDefaultNetworkId(chainNamespace);\n  if (chainNamespace === CHAIN_NAMESPACES.EIP155) {\n    return getEvmChainConfig(finalChainId);\n  } else if (chainNamespace === CHAIN_NAMESPACES.SOLANA) {\n    return getSolanaChainConfig(finalChainId);\n  }\n  return null;\n};\n","import { CustomError } from \"ts-custom-error\";\n\n// @flow\nexport interface IWeb3AuthError extends CustomError {\n  code: number;\n  message: string;\n  toString(): string;\n}\n\nexport type ErrorCodes = {\n  [key: number]: string;\n};\n\nexport abstract class Web3AuthError extends CustomError implements IWeb3AuthError {\n  code: number;\n\n  message: string;\n\n  public constructor(code: number, message?: string) {\n    // takes care of stack and proto\n    super(message);\n\n    this.code = code;\n    this.message = message || \"\";\n    // Set name explicitly as minification can mangle class names\n    Object.defineProperty(this, \"name\", { value: \"Web3AuthError\" });\n  }\n\n  toJSON(): IWeb3AuthError {\n    return {\n      name: this.name,\n      code: this.code,\n      message: this.message,\n    };\n  }\n\n  toString(): string {\n    return JSON.stringify(this.toJSON());\n  }\n}\n\nexport class WalletInitializationError extends Web3AuthError {\n  protected static messages: ErrorCodes = {\n    5000: \"Custom\",\n    5001: \"Wallet is not found\",\n    5002: \"Wallet is not installed\",\n    5003: \"Wallet is not ready yet\",\n    5004: \"Wallet window is blocked\",\n    5005: \"Wallet window has been closed by the user\",\n    5006: \"Incompatible chain namespace provided\",\n    5007: \"Adapter has already been included\",\n    5008: \"Invalid provider Config\",\n    5009: \"Provider is not ready yet\",\n    5010: \"Failed to connect with rpc url\",\n    5011: \"Invalid params passed in\",\n    5013: \"Invalid network provided\",\n  };\n\n  public constructor(code: number, message?: string) {\n    // takes care of stack and proto\n    super(code, message);\n\n    // Set name explicitly as minification can mangle class names\n    Object.defineProperty(this, \"name\", { value: \"WalletInitializationError\" });\n  }\n\n  public static fromCode(code: number, extraMessage = \"\"): IWeb3AuthError {\n    return new WalletInitializationError(code, `${WalletInitializationError.messages[code]}, ${extraMessage}`);\n  }\n\n  // Custom methods\n  public static notFound(extraMessage = \"\"): IWeb3AuthError {\n    return WalletInitializationError.fromCode(5001, extraMessage);\n  }\n\n  public static notInstalled(extraMessage = \"\"): IWeb3AuthError {\n    return WalletInitializationError.fromCode(5002, extraMessage);\n  }\n\n  public static notReady(extraMessage = \"\"): IWeb3AuthError {\n    return WalletInitializationError.fromCode(5003, extraMessage);\n  }\n\n  public static windowBlocked(extraMessage = \"\"): IWeb3AuthError {\n    return WalletInitializationError.fromCode(5004, extraMessage);\n  }\n\n  public static windowClosed(extraMessage = \"\"): IWeb3AuthError {\n    return WalletInitializationError.fromCode(5005, extraMessage);\n  }\n\n  public static incompatibleChainNameSpace(extraMessage = \"\"): IWeb3AuthError {\n    return WalletInitializationError.fromCode(5006, extraMessage);\n  }\n\n  public static duplicateAdapterError(extraMessage = \"\"): IWeb3AuthError {\n    return WalletInitializationError.fromCode(5007, extraMessage);\n  }\n\n  public static invalidProviderConfigError(extraMessage = \"\"): IWeb3AuthError {\n    return WalletInitializationError.fromCode(5008, extraMessage);\n  }\n\n  public static providerNotReadyError(extraMessage = \"\"): IWeb3AuthError {\n    return WalletInitializationError.fromCode(5009, extraMessage);\n  }\n\n  public static rpcConnectionError(extraMessage = \"\"): IWeb3AuthError {\n    return WalletInitializationError.fromCode(5010, extraMessage);\n  }\n\n  public static invalidParams(extraMessage = \"\"): IWeb3AuthError {\n    return WalletInitializationError.fromCode(5011, extraMessage);\n  }\n\n  public static invalidNetwork(extraMessage = \"\"): IWeb3AuthError {\n    return WalletInitializationError.fromCode(5013, extraMessage);\n  }\n}\n\n/**\n * wallet login errors\n */\n\nexport class WalletLoginError extends Web3AuthError {\n  protected static messages: ErrorCodes = {\n    5000: \"Custom\",\n    5111: \"Failed to connect with wallet\",\n    5112: \"Failed to disconnect from wallet\",\n    5113: \"Wallet is not connected\",\n    5114: \"Wallet popup has been closed by the user\",\n    5115: \"User has already enabled mfa, please use the @web3auth/web3auth-web sdk for login with mfa\",\n    5116: \"Chain config has not been added. Please add the chain config before calling switchChain\",\n    5117: \"Unsupported operation\",\n    5118: \"useCoreKitKey flag is enabled but coreKitKey is not available\",\n    5119: \"User not logged in.\",\n  };\n\n  public constructor(code: number, message?: string) {\n    // takes care of stack and proto\n    super(code, message);\n\n    // Set name explicitly as minification can mangle class names\n    Object.defineProperty(this, \"name\", { value: \"WalletLoginError\" });\n  }\n\n  public static fromCode(code: number, extraMessage = \"\"): IWeb3AuthError {\n    return new WalletLoginError(code, `${WalletLoginError.messages[code]}. ${extraMessage}`);\n  }\n\n  public static connectionError(extraMessage = \"\"): IWeb3AuthError {\n    return WalletLoginError.fromCode(5111, extraMessage);\n  }\n\n  public static disconnectionError(extraMessage = \"\"): IWeb3AuthError {\n    return WalletLoginError.fromCode(5112, extraMessage);\n  }\n\n  public static notConnectedError(extraMessage = \"\"): IWeb3AuthError {\n    return WalletLoginError.fromCode(5113, extraMessage);\n  }\n\n  public static popupClosed(extraMessage = \"\"): IWeb3AuthError {\n    return WalletLoginError.fromCode(5114, extraMessage);\n  }\n\n  public static mfaEnabled(extraMessage = \"\"): IWeb3AuthError {\n    return WalletLoginError.fromCode(5115, extraMessage);\n  }\n\n  public static chainConfigNotAdded(extraMessage = \"\"): IWeb3AuthError {\n    return WalletLoginError.fromCode(5116, extraMessage);\n  }\n\n  public static unsupportedOperation(extraMessage = \"\"): IWeb3AuthError {\n    return WalletLoginError.fromCode(5117, extraMessage);\n  }\n\n  public static coreKitKeyNotFound(extraMessage = \"\"): IWeb3AuthError {\n    return WalletLoginError.fromCode(5118, extraMessage);\n  }\n\n  public static userNotLoggedIn(extraMessage = \"\"): IWeb3AuthError {\n    return WalletLoginError.fromCode(5119, extraMessage);\n  }\n}\n\nexport class WalletOperationsError extends Web3AuthError {\n  protected static messages: ErrorCodes = {\n    5000: \"Custom\",\n    5201: \"Provided chainId is not allowed\",\n    5202: \"This operation is not allowed\",\n  };\n\n  public constructor(code: number, message?: string) {\n    // takes care of stack and proto\n    super(code, message);\n\n    // Set name explicitly as minification can mangle class names\n    Object.defineProperty(this, \"name\", { value: \"WalletOperationsError\" });\n  }\n\n  public static fromCode(code: number, extraMessage = \"\"): IWeb3AuthError {\n    return new WalletOperationsError(code, `${WalletOperationsError.messages[code]}, ${extraMessage}`);\n  }\n\n  // Custom methods\n  public static chainIDNotAllowed(extraMessage = \"\"): IWeb3AuthError {\n    return WalletOperationsError.fromCode(5201, extraMessage);\n  }\n\n  public static operationNotAllowed(extraMessage = \"\"): IWeb3AuthError {\n    return WalletOperationsError.fromCode(5202, extraMessage);\n  }\n\n  public static chainNamespaceNotAllowed(extraMessage = \"\"): IWeb3AuthError {\n    return WalletOperationsError.fromCode(5203, extraMessage);\n  }\n}\n\nexport class WalletProviderError extends Web3AuthError {\n  protected static messages: ErrorCodes = {\n    5000: \"Custom\",\n    5301: \"Expected a single, non-array, object argument.\",\n    5302: \"'args.method' must be a non-empty string.\",\n    5303: \"'args.params' must be an object or array if provided.\",\n  };\n\n  public constructor(code: number, message?: string) {\n    // takes care of stack and proto\n    super(code, message);\n\n    // Set name explicitly as minification can mangle class names\n    Object.defineProperty(this, \"name\", { value: \"WalletProviderError\" });\n  }\n\n  public static fromCode(code: number, extraMessage = \"\"): IWeb3AuthError {\n    return new WalletOperationsError(code, `${WalletProviderError.messages[code]}, ${extraMessage}`);\n  }\n\n  // Custom methods\n  public static invalidRequestArgs(extraMessage = \"\"): IWeb3AuthError {\n    return WalletOperationsError.fromCode(5301, extraMessage);\n  }\n\n  public static invalidRequestMethod(extraMessage = \"\"): IWeb3AuthError {\n    return WalletOperationsError.fromCode(5302, extraMessage);\n  }\n\n  public static invalidRequestParams(extraMessage = \"\"): IWeb3AuthError {\n    return WalletOperationsError.fromCode(5303, extraMessage);\n  }\n}\n","export const MULTI_CHAIN_ADAPTERS = {\n  OPENLOGIN: \"openlogin\",\n  WALLET_CONNECT_V2: \"wallet-connect-v2\",\n};\n\nexport const SOLANA_ADAPTERS = {\n  TORUS_SOLANA: \"torus-solana\",\n  PHANTOM: \"phantom\",\n  SOLFLARE: \"solflare\",\n  SLOPE: \"slope\",\n  ...MULTI_CHAIN_ADAPTERS,\n};\n\nexport const EVM_ADAPTERS = {\n  TORUS_EVM: \"torus-evm\",\n  METAMASK: \"metamask\",\n  COINBASE: \"coinbase\",\n  ...MULTI_CHAIN_ADAPTERS,\n};\n\nexport const WALLET_ADAPTERS = {\n  ...EVM_ADAPTERS,\n  ...SOLANA_ADAPTERS,\n};\nexport type WALLET_ADAPTER_TYPE = (typeof WALLET_ADAPTERS)[keyof typeof WALLET_ADAPTERS];\nexport type SOLANA_ADAPTER_TYPE = (typeof SOLANA_ADAPTERS)[keyof typeof SOLANA_ADAPTERS];\nexport type EVM_ADAPTER_TYPE = (typeof EVM_ADAPTERS)[keyof typeof EVM_ADAPTERS];\nexport type MULTI_CHAIN_ADAPTER_TYPE = (typeof MULTI_CHAIN_ADAPTERS)[keyof typeof MULTI_CHAIN_ADAPTERS];\n\nexport const ADAPTER_NAMES = {\n  [MULTI_CHAIN_ADAPTERS.OPENLOGIN]: \"OpenLogin\",\n  [MULTI_CHAIN_ADAPTERS.WALLET_CONNECT_V2]: \"Wallet Connect v2\",\n  [SOLANA_ADAPTERS.TORUS_SOLANA]: \"Torus\",\n  [SOLANA_ADAPTERS.PHANTOM]: \"Phantom\",\n  [SOLANA_ADAPTERS.SOLFLARE]: \"Solflare\",\n  [SOLANA_ADAPTERS.SLOPE]: \"Slope\",\n  [EVM_ADAPTERS.TORUS_EVM]: \"Torus\",\n  [EVM_ADAPTERS.METAMASK]: \"Metamask\",\n  [EVM_ADAPTERS.COINBASE]: \"Coinbase\",\n};\n","import { JRPCRequest, JRPCResponse, Maybe, RequestArguments, SafeEventEmitter, SendCallBack } from \"@toruslabs/openlogin-jrpc\";\nimport { OPENLOGIN_NETWORK, OPENLOGIN_NETWORK_TYPE, OpenloginUserInfo } from \"@toruslabs/openlogin-utils\";\n\nimport { getChainConfig } from \"../chain/config\";\nimport { AdapterNamespaceType, CHAIN_NAMESPACES, ChainNamespaceType, CustomChainConfig } from \"../chain/IChainInterface\";\nimport { WalletInitializationError, WalletLoginError, WalletOperationsError } from \"../errors\";\nimport { SafeEventEmitterProvider } from \"../provider/IProvider\";\nimport { WALLET_ADAPTERS } from \"../wallet\";\n\nexport type UserInfo = OpenloginUserInfo;\n\nexport type WEB3AUTH_NETWORK_TYPE = OPENLOGIN_NETWORK_TYPE;\nexport const WEB3AUTH_NETWORK = OPENLOGIN_NETWORK;\nexport { OPENLOGIN_NETWORK, type OPENLOGIN_NETWORK_TYPE } from \"@toruslabs/openlogin-utils\";\n\nexport const ADAPTER_CATEGORY = {\n  EXTERNAL: \"external\",\n  IN_APP: \"in_app\",\n} as const;\nexport type ADAPTER_CATEGORY_TYPE = (typeof ADAPTER_CATEGORY)[keyof typeof ADAPTER_CATEGORY];\n\nexport interface AdapterInitOptions {\n  /**\n   * Whether to auto connect to the adapter based on redirect mode or saved adapters\n   */\n  autoConnect?: boolean;\n}\n\nexport const ADAPTER_STATUS = {\n  NOT_READY: \"not_ready\",\n  READY: \"ready\",\n  CONNECTING: \"connecting\",\n  CONNECTED: \"connected\",\n  DISCONNECTED: \"disconnected\",\n  ERRORED: \"errored\",\n} as const;\n\nexport const ADAPTER_EVENTS = {\n  ...ADAPTER_STATUS,\n  ADAPTER_DATA_UPDATED: \"adapter_data_updated\",\n  CACHE_CLEAR: \"cache_clear\",\n} as const;\nexport type ADAPTER_STATUS_TYPE = (typeof ADAPTER_STATUS)[keyof typeof ADAPTER_STATUS];\n\nexport type CONNECTED_EVENT_DATA = {\n  adapter: string;\n  reconnected: boolean;\n};\n\nexport type UserAuthInfo = { idToken: string };\n\nexport interface BaseAdapterSettings {\n  clientId?: string;\n  sessionTime?: number;\n  chainConfig?: Partial<CustomChainConfig> & Pick<CustomChainConfig, \"chainNamespace\">;\n  web3AuthNetwork?: OPENLOGIN_NETWORK_TYPE;\n  useCoreKitKey?: boolean;\n}\n\nexport interface IProvider extends SafeEventEmitter {\n  get chainId(): string;\n  request<S, R>(args: RequestArguments<S>): Promise<Maybe<R>>;\n  sendAsync<T, U>(req: JRPCRequest<T>, callback: SendCallBack<JRPCResponse<U>>): void;\n  sendAsync<T, U>(req: JRPCRequest<T>): Promise<JRPCResponse<U>>;\n  send<T, U>(req: JRPCRequest<T>, callback: SendCallBack<JRPCResponse<U>>): void;\n}\n\nexport interface IBaseProvider<T> extends IProvider {\n  provider: SafeEventEmitterProvider | null;\n  currentChainConfig: Partial<CustomChainConfig>;\n  setupProvider(provider: T): Promise<void>;\n  addChain(chainConfig: CustomChainConfig): void;\n  switchChain(params: { chainId: string }): Promise<void>;\n  updateProviderEngineProxy(provider: SafeEventEmitterProvider): void;\n}\n\nexport interface IAdapter<T> extends SafeEventEmitter {\n  adapterNamespace: AdapterNamespaceType;\n  currentChainNamespace: ChainNamespaceType;\n  chainConfigProxy: CustomChainConfig | null;\n  type: ADAPTER_CATEGORY_TYPE;\n  name: string;\n  sessionTime: number;\n  web3AuthNetwork: OPENLOGIN_NETWORK_TYPE;\n  clientId: string;\n  status: ADAPTER_STATUS_TYPE;\n  provider: IProvider | null;\n  adapterData?: unknown;\n  connnected: boolean;\n  addChain(chainConfig: CustomChainConfig): Promise<void>;\n  init(options?: AdapterInitOptions): Promise<void>;\n  disconnect(options?: { cleanup: boolean }): Promise<void>;\n  connect(params?: T): Promise<IProvider | null>;\n  getUserInfo(): Promise<Partial<UserInfo>>;\n  setAdapterSettings(adapterSettings: BaseAdapterSettings): void;\n  switchChain(params: { chainId: string }): Promise<void>;\n  authenticateUser(): Promise<UserAuthInfo>;\n}\n\nexport abstract class BaseAdapter<T> extends SafeEventEmitter implements IAdapter<T> {\n  public adapterData?: unknown = {};\n\n  public sessionTime = 86400;\n\n  public clientId: string;\n\n  public web3AuthNetwork: OPENLOGIN_NETWORK_TYPE = OPENLOGIN_NETWORK.MAINNET;\n\n  protected rehydrated = false;\n\n  // should be added in constructor or from setAdapterSettings function\n  // before calling init function.\n  protected chainConfig: CustomChainConfig | null = null;\n\n  protected knownChainConfigs: Record<CustomChainConfig[\"chainId\"], CustomChainConfig> = {};\n\n  public abstract adapterNamespace: AdapterNamespaceType;\n\n  public abstract currentChainNamespace: ChainNamespaceType;\n\n  public abstract type: ADAPTER_CATEGORY_TYPE;\n\n  public abstract name: string;\n\n  public abstract status: ADAPTER_STATUS_TYPE;\n\n  constructor(options: BaseAdapterSettings = {}) {\n    super();\n    this.setAdapterSettings(options);\n  }\n\n  get chainConfigProxy(): CustomChainConfig | null {\n    return this.chainConfig ? { ...this.chainConfig } : null;\n  }\n\n  get connnected(): boolean {\n    return this.status === ADAPTER_STATUS.CONNECTED;\n  }\n\n  public abstract get provider(): IProvider | null;\n\n  public setAdapterSettings(options: BaseAdapterSettings): void {\n    if (this.status === ADAPTER_STATUS.READY) return;\n    if (options?.sessionTime) {\n      this.sessionTime = options.sessionTime;\n    }\n    if (options?.clientId) {\n      this.clientId = options.clientId;\n    }\n    if (options?.web3AuthNetwork) {\n      this.web3AuthNetwork = options.web3AuthNetwork;\n    }\n    const customChainConfig = options.chainConfig;\n    if (customChainConfig) {\n      if (!customChainConfig.chainNamespace) throw WalletInitializationError.notReady(\"ChainNamespace is required while setting chainConfig\");\n      this.currentChainNamespace = customChainConfig.chainNamespace;\n      // chainId is optional in this function.\n      // we go with mainnet chainId by default.\n      const defaultChainConfig = getChainConfig(customChainConfig.chainNamespace, customChainConfig.chainId);\n      // NOTE: It is being forced casted to CustomChainConfig to handle OTHER Chainnamespace\n      // where chainConfig is not required.\n      const finalChainConfig = { ...(defaultChainConfig || {}), ...customChainConfig } as CustomChainConfig;\n\n      this.chainConfig = finalChainConfig;\n      this.addChainConfig(finalChainConfig);\n    }\n  }\n\n  checkConnectionRequirements(): void {\n    // we reconnect without killing existing wallet connect session on calling connect again.\n    if (this.name === WALLET_ADAPTERS.WALLET_CONNECT_V2 && this.status === ADAPTER_STATUS.CONNECTING) return;\n    else if (this.status === ADAPTER_STATUS.CONNECTING) throw WalletInitializationError.notReady(\"Already connecting\");\n\n    if (this.status === ADAPTER_STATUS.CONNECTED) throw WalletLoginError.connectionError(\"Already connected\");\n    if (this.status !== ADAPTER_STATUS.READY)\n      throw WalletLoginError.connectionError(\n        \"Wallet adapter is not ready yet, Please wait for init function to resolve before calling connect/connectTo function\"\n      );\n  }\n\n  checkInitializationRequirements(): void {\n    if (!this.clientId) throw WalletInitializationError.invalidParams(\"Please initialize Web3Auth with a valid clientId in constructor\");\n    if (!this.chainConfig) throw WalletInitializationError.invalidParams(\"rpcTarget is required in chainConfig\");\n    if (!this.chainConfig.rpcTarget && this.chainConfig.chainNamespace !== CHAIN_NAMESPACES.OTHER) {\n      throw WalletInitializationError.invalidParams(\"rpcTarget is required in chainConfig\");\n    }\n\n    if (!this.chainConfig.chainId && this.chainConfig.chainNamespace !== CHAIN_NAMESPACES.OTHER) {\n      throw WalletInitializationError.invalidParams(\"chainID is required in chainConfig\");\n    }\n    if (this.status === ADAPTER_STATUS.NOT_READY) return;\n    if (this.status === ADAPTER_STATUS.CONNECTED) throw WalletInitializationError.notReady(\"Already connected\");\n    if (this.status === ADAPTER_STATUS.READY) throw WalletInitializationError.notReady(\"Adapter is already initialized\");\n  }\n\n  checkDisconnectionRequirements(): void {\n    if (this.status !== ADAPTER_STATUS.CONNECTED) throw WalletLoginError.disconnectionError(\"Not connected with wallet\");\n  }\n\n  checkAddChainRequirements(chainConfig: CustomChainConfig, init = false): void {\n    if (!init && !this.provider) throw WalletLoginError.notConnectedError(\"Not connected with wallet.\");\n    if (this.currentChainNamespace !== chainConfig.chainNamespace) {\n      throw WalletOperationsError.chainNamespaceNotAllowed(\"This adapter doesn't support this chainNamespace\");\n    }\n  }\n\n  checkSwitchChainRequirements({ chainId }: { chainId: string }, init = false): void {\n    if (!init && !this.provider) throw WalletLoginError.notConnectedError(\"Not connected with wallet.\");\n    if (!this.knownChainConfigs[chainId]) throw WalletLoginError.chainConfigNotAdded(\"Invalid chainId\");\n  }\n\n  updateAdapterData(data: unknown): void {\n    this.adapterData = data;\n    this.emit(ADAPTER_EVENTS.ADAPTER_DATA_UPDATED, { adapterName: this.name, data });\n  }\n\n  protected addChainConfig(chainConfig: CustomChainConfig): void {\n    const currentConfig = this.knownChainConfigs[chainConfig.chainId];\n    this.knownChainConfigs[chainConfig.chainId] = {\n      ...(currentConfig || {}),\n      ...chainConfig,\n    };\n  }\n\n  protected getChainConfig(chainId: string): CustomChainConfig | null {\n    return this.knownChainConfigs[chainId] || null;\n  }\n\n  abstract init(options?: AdapterInitOptions): Promise<void>;\n  abstract connect(params?: T): Promise<IProvider | null>;\n  abstract disconnect(): Promise<void>;\n  abstract getUserInfo(): Promise<Partial<UserInfo>>;\n  abstract authenticateUser(): Promise<UserAuthInfo>;\n  abstract addChain(chainConfig: CustomChainConfig): Promise<void>;\n  abstract switchChain(params: { chainId: string }): Promise<void>;\n}\n\nexport interface BaseAdapterConfig {\n  label: string;\n  showOnModal?: boolean;\n  showOnMobile?: boolean;\n  showOnDesktop?: boolean;\n}\n\nexport type LoginMethodConfig = Record<\n  string,\n  {\n    /**\n     * Display Name. If not provided, we use the default for openlogin app\n     */\n    name: string;\n    /**\n     * Description for button. If provided, it renders as a full length button. else, icon button\n     */\n    description?: string;\n    /**\n     * Logo to be shown on mouse hover. If not provided, we use the default for openlogin app\n     */\n    logoHover?: string;\n    /**\n     * Logo to be shown on dark background (dark theme). If not provided, we use the default for openlogin app\n     */\n    logoLight?: string;\n    /**\n     * Logo to be shown on light background (light theme). If not provided, we use the default for openlogin app\n     */\n    logoDark?: string;\n    /**\n     * Show login button on the main list\n     */\n    mainOption?: boolean;\n    /**\n     * Whether to show the login button on modal or not\n     */\n    showOnModal?: boolean;\n    /**\n     * Whether to show the login button on desktop\n     */\n    showOnDesktop?: boolean;\n    /**\n     * Whether to show the login button on mobile\n     */\n    showOnMobile?: boolean;\n  }\n>;\n\nexport interface IWalletConnectExtensionAdapter {\n  name: string;\n  chains: ChainNamespaceType[];\n  logo: string;\n  mobile: {\n    native: string;\n    universal: string;\n  };\n  desktop: {\n    native: string;\n    universal: string;\n  };\n}\n\nexport type WalletConnectV2Data = {\n  uri: string;\n  extensionAdapters: IWalletConnectExtensionAdapter[];\n};\nexport interface IAdapterDataEvent {\n  adapterName: string;\n  data: unknown;\n}\n\nexport interface INetworkSwitchProvider {\n  addChain(chainConfig: CustomChainConfig): Promise<void>;\n  switchChain(chainId: string): Promise<void>;\n}\nexport interface INetworkSwitch {\n  addNetwork(params: { chainConfig: CustomChainConfig; appOrigin: string }): Promise<boolean>;\n  switchNetwork(params: { currentChainConfig: CustomChainConfig; newChainConfig: Partial<CustomChainConfig>; appOrigin: string }): Promise<boolean>;\n}\n\nexport abstract class BaseNetworkSwitch implements INetworkSwitch {\n  abstract switchNetwork(params: {\n    currentChainConfig: CustomChainConfig;\n    newChainConfig: Partial<CustomChainConfig>;\n    appOrigin: string;\n  }): Promise<boolean>;\n\n  abstract addNetwork(params: { chainConfig: CustomChainConfig; appOrigin: string }): Promise<boolean>;\n}\n","export const authServer = \"https://authjs.web3auth.io\";\n","import loglevel from \"loglevel\";\n\nexport default loglevel.getLogger(\"web3auth-logger\");\n","export function storageAvailable(type: \"sessionStorage\" | \"localStorage\"): boolean {\n  let storageExists = false;\n  let storageLength = 0;\n  let storage: Storage;\n  try {\n    storage = window[type];\n    storageExists = true;\n    storageLength = storage.length;\n    const x = \"__storage_test__\";\n    storage.setItem(x, x);\n    storage.removeItem(x);\n    return true;\n  } catch (error: unknown) {\n    const _error = error as DOMException;\n    return !!(\n      _error &&\n      // everything except Firefox\n      (_error.code === 22 ||\n        // Firefox\n        _error.code === 1014 ||\n        // test name field too, because code might not be present\n        // everything except Firefox\n        _error.name === \"QuotaExceededError\" ||\n        // Firefox\n        _error.name === \"NS_ERROR_DOM_QUOTA_REACHED\") &&\n      // acknowledge QuotaExceededError only if there's something already stored\n      storageExists &&\n      storageLength !== 0\n    );\n  }\n}\n\nexport const isHexStrict = (hex: string): boolean => {\n  return (typeof hex === \"string\" || typeof hex === \"number\") && /^(-)?0x[0-9a-f]*$/i.test(hex);\n};\n","import { post } from \"@toruslabs/http-helpers\";\nimport { OPENLOGIN_NETWORK_TYPE } from \"@toruslabs/openlogin-utils\";\nimport { jwtDecode } from \"jwt-decode\";\n\nimport { ChainNamespaceType } from \"../chain/IChainInterface\";\nimport { authServer } from \"../constants\";\nimport log from \"../loglevel\";\nimport { storageAvailable } from \"../utils\";\n\nexport const checkIfTokenIsExpired = (token: string) => {\n  const decoded = jwtDecode<{ exp: number }>(token);\n  if (!decoded.exp) {\n    return true;\n  }\n  if (decoded.exp < Math.floor(Date.now() / 1000)) {\n    return true;\n  }\n  return false;\n};\n\nexport const signChallenge = async (payload: Record<string, string | number>, chainNamespace: ChainNamespaceType): Promise<string> => {\n  const t = chainNamespace === \"solana\" ? \"sip99\" : \"eip191\";\n  const header = {\n    t,\n  };\n\n  const network = chainNamespace === \"solana\" ? \"solana\" : \"ethereum\";\n  const data = {\n    payload,\n    header,\n    network,\n  };\n  const res = await post<{ success: boolean; challenge: string }>(`${authServer}/siww/get`, data);\n  if (!res.success) {\n    throw new Error(\"Failed to authenticate user, Please reach out to Web3Auth Support team\");\n  }\n\n  return res.challenge;\n};\n\nexport const verifySignedChallenge = async (\n  chainNamespace: ChainNamespaceType,\n  signedMessage: string,\n  challenge: string,\n  issuer: string,\n  sessionTime: number,\n  clientId?: string,\n  web3AuthNetwork?: OPENLOGIN_NETWORK_TYPE\n): Promise<string> => {\n  const t = chainNamespace === \"solana\" ? \"sip99\" : \"eip191\";\n  const sigData = {\n    signature: {\n      s: signedMessage,\n      t,\n    },\n    message: challenge,\n    issuer,\n    audience: typeof window.location !== \"undefined\" ? window.location.hostname : \"com://reactnative\",\n    timeout: sessionTime,\n  };\n\n  const idTokenRes = await post<{ success: boolean; token: string; error?: string }>(`${authServer}/siww/verify`, sigData, {\n    headers: {\n      client_id: clientId,\n      wallet_provider: issuer,\n      web3auth_network: web3AuthNetwork,\n    },\n  });\n  if (!idTokenRes.success) {\n    log.error(\"Failed to authenticate user, ,message verification failed\", idTokenRes.error);\n    throw new Error(\"Failed to authenticate user, ,message verification failed\");\n  }\n  return idTokenRes.token;\n};\n\nexport const getSavedToken = (userAddress: string, issuer: string) => {\n  if (storageAvailable(\"localStorage\")) {\n    return localStorage.getItem(`${userAddress.toLowerCase()}_${issuer}`);\n  }\n  return null;\n};\n\nexport const saveToken = (userAddress: string, issuer: string, token: string) => {\n  if (storageAvailable(\"localStorage\")) {\n    return localStorage.setItem(`${userAddress.toLowerCase()}_${issuer}`, token);\n  }\n  return null;\n};\n\nexport const clearToken = (userAddress: string, issuer: string) => {\n  if (storageAvailable(\"localStorage\")) {\n    return localStorage.removeItem(`${userAddress.toLowerCase()}_${issuer}`);\n  }\n  return null;\n};\n","export { type Maybe, type RequestArguments, type SafeEventEmitterProvider, type SendCallBack } from \"@toruslabs/openlogin-jrpc\";\n\nexport const PROVIDER_EVENTS = {\n  INITIALIZED: \"initialized\",\n  ERRORED: \"errored\",\n};\n"],"names":["CHAIN_NAMESPACES","EIP155","SOLANA","OTHER","ADAPTER_NAMESPACES","XRPL","MULTICHAIN","getDefaultNetworkId","chainNamespace","Error","getEvmChainConfig","chainId","rpcTarget","displayName","blockExplorer","ticker","tickerName","decimals","getSolanaChainConfig","getChainConfig","finalChainId","parseInt","Web3AuthError","CustomError","constructor","code","message","_defineProperty","Object","defineProperty","value","toJSON","name","toString","JSON","stringify","WalletInitializationError","fromCode","extraMessage","arguments","length","undefined","messages","notFound","notInstalled","notReady","windowBlocked","windowClosed","incompatibleChainNameSpace","duplicateAdapterError","invalidProviderConfigError","providerNotReadyError","rpcConnectionError","invalidParams","invalidNetwork","WalletLoginError","connectionError","disconnectionError","notConnectedError","popupClosed","mfaEnabled","chainConfigNotAdded","unsupportedOperation","coreKitKeyNotFound","userNotLoggedIn","WalletOperationsError","chainIDNotAllowed","operationNotAllowed","chainNamespaceNotAllowed","WalletProviderError","invalidRequestArgs","invalidRequestMethod","invalidRequestParams","MULTI_CHAIN_ADAPTERS","OPENLOGIN","WALLET_CONNECT_V2","SOLANA_ADAPTERS","_objectSpread","TORUS_SOLANA","PHANTOM","SOLFLARE","SLOPE","EVM_ADAPTERS","TORUS_EVM","METAMASK","COINBASE","WALLET_ADAPTERS","ADAPTER_NAMES","WEB3AUTH_NETWORK","OPENLOGIN_NETWORK","ADAPTER_CATEGORY","EXTERNAL","IN_APP","ADAPTER_STATUS","NOT_READY","READY","CONNECTING","CONNECTED","DISCONNECTED","ERRORED","ADAPTER_EVENTS","ADAPTER_DATA_UPDATED","CACHE_CLEAR","BaseAdapter","SafeEventEmitter","options","MAINNET","setAdapterSettings","chainConfigProxy","chainConfig","connnected","status","sessionTime","clientId","web3AuthNetwork","customChainConfig","currentChainNamespace","defaultChainConfig","finalChainConfig","addChainConfig","checkConnectionRequirements","checkInitializationRequirements","checkDisconnectionRequirements","checkAddChainRequirements","init","provider","checkSwitchChainRequirements","_ref","knownChainConfigs","updateAdapterData","data","adapterData","emit","adapterName","currentConfig","BaseNetworkSwitch","authServer","loglevel","getLogger","storageAvailable","type","storageExists","storageLength","storage","window","x","setItem","removeItem","error","_error","isHexStrict","hex","test","checkIfTokenIsExpired","token","decoded","jwtDecode","exp","Math","floor","Date","now","signChallenge","payload","t","header","network","res","post","success","challenge","verifySignedChallenge","signedMessage","issuer","sigData","signature","s","audience","location","hostname","timeout","idTokenRes","headers","client_id","wallet_provider","web3auth_network","log","getSavedToken","userAddress","localStorage","getItem","toLowerCase","saveToken","clearToken","PROVIDER_EVENTS","INITIALIZED"],"mappings":"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"}