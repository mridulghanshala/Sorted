{"version":3,"file":"baseSessionManager.esm.js","sources":["../src/baseSessionManager.ts"],"sourcesContent":["import { get, patch, post, put } from \"@toruslabs/http-helpers\";\n\nimport { ApiRequestParams, ISessionManager } from \"./interfaces\";\n\nexport abstract class BaseSessionManager<TSessionData> implements ISessionManager<TSessionData> {\n  sessionId: string;\n\n  checkSessionParams() {\n    if (!this.sessionId) throw new Error(\"Session id is required\");\n    this.sessionId = this.sessionId.padStart(64, \"0\");\n  }\n\n  /**\n   * Common handler method for making an http request.\n   *\n   * Note: Embed all the query parameters in the path itself.\n   */\n  protected request<T>({ method = \"GET\", url, data = {}, headers = {} }: ApiRequestParams): Promise<T> {\n    const options = { headers };\n\n    switch (method) {\n      case \"GET\":\n        return get<T>(url, options);\n      case \"POST\":\n        return post<T>(url, data, options);\n      case \"PUT\":\n        return put<T>(url, data, options);\n      case \"PATCH\":\n        return patch<T>(url, data, options);\n    }\n\n    throw new Error(\"Invalid method type\");\n  }\n\n  abstract createSession(data: TSessionData): Promise<string>;\n\n  abstract authorizeSession(): Promise<TSessionData>;\n\n  abstract updateSession(data: Partial<TSessionData>): Promise<void>;\n\n  abstract invalidateSession(): Promise<boolean>;\n}\n"],"names":["BaseSessionManager","constructor","_defineProperty","checkSessionParams","sessionId","Error","padStart","request","_ref","method","url","data","headers","options","get","post","put","patch"],"mappings":";;;AAIO,MAAeA,kBAAkB,CAAwD;EAAAC,WAAA,GAAA;IAAAC,eAAA,CAAA,IAAA,EAAA,WAAA,EAAA,KAAA,CAAA,CAAA,CAAA;AAAA,GAAA;AAG9FC,EAAAA,kBAAkBA,GAAG;IACnB,IAAI,CAAC,IAAI,CAACC,SAAS,EAAE,MAAM,IAAIC,KAAK,CAAC,wBAAwB,CAAC,CAAA;AAC9D,IAAA,IAAI,CAACD,SAAS,GAAG,IAAI,CAACA,SAAS,CAACE,QAAQ,CAAC,EAAE,EAAE,GAAG,CAAC,CAAA;AACnD,GAAA;;AAEA;AACF;AACA;AACA;AACA;EACYC,OAAOA,CAAAC,IAAA,EAAoF;IAAA,IAAhF;AAAEC,MAAAA,MAAM,GAAG,KAAK;MAAEC,GAAG;MAAEC,IAAI,GAAG,EAAE;AAAEC,MAAAA,OAAO,GAAG,EAAC;AAAoB,KAAC,GAAAJ,IAAA,CAAA;AACrF,IAAA,MAAMK,OAAO,GAAG;AAAED,MAAAA,OAAAA;KAAS,CAAA;AAE3B,IAAA,QAAQH,MAAM;AACZ,MAAA,KAAK,KAAK;AACR,QAAA,OAAOK,GAAG,CAAIJ,GAAG,EAAEG,OAAO,CAAC,CAAA;AAC7B,MAAA,KAAK,MAAM;AACT,QAAA,OAAOE,IAAI,CAAIL,GAAG,EAAEC,IAAI,EAAEE,OAAO,CAAC,CAAA;AACpC,MAAA,KAAK,KAAK;AACR,QAAA,OAAOG,GAAG,CAAIN,GAAG,EAAEC,IAAI,EAAEE,OAAO,CAAC,CAAA;AACnC,MAAA,KAAK,OAAO;AACV,QAAA,OAAOI,KAAK,CAAIP,GAAG,EAAEC,IAAI,EAAEE,OAAO,CAAC,CAAA;AACvC,KAAA;AAEA,IAAA,MAAM,IAAIR,KAAK,CAAC,qBAAqB,CAAC,CAAA;AACxC,GAAA;AASF;;;;"}