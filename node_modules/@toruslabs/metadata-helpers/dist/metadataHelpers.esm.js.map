{"version":3,"file":"metadataHelpers.esm.js","sources":["../src/utils.ts","../src/MetadataStorageLayer.ts","../src/webAuthnShareResolver.ts"],"sourcesContent":["import { ec as EC } from \"elliptic\";\nimport { keccak256 as keccakHash } from \"ethereum-cryptography/keccak\";\n\nexport function keccak256(a: Buffer): Buffer {\n  return Buffer.from(keccakHash(a));\n}\n\nexport const ec = new EC(\"secp256k1\");\n","import { post, setAPIKey, setEmbedHost } from \"@toruslabs/http-helpers\";\nimport stringify from \"json-stable-stringify\";\n\nimport { ec, keccak256 } from \"./utils\";\n\nexport type PubKeyParams = {\n  pub_key_X: string;\n  pub_key_Y: string;\n};\n\nexport type MetadataParams = PubKeyParams & {\n  set_data: {\n    data: string;\n    timestamp: string;\n  };\n  signature: string;\n};\n\nclass MetadataStorageLayer {\n  public metadataHost: string;\n\n  public serverTimeOffset: number; // ms\n\n  constructor(metadataHost = \"https://metadata.tor.us\", serverTimeOffset = 0) {\n    this.metadataHost = metadataHost;\n    this.serverTimeOffset = serverTimeOffset;\n  }\n\n  static setAPIKey(apiKey: string): void {\n    setAPIKey(apiKey);\n  }\n\n  static setEmbedHost(embedHost: string): void {\n    setEmbedHost(embedHost);\n  }\n\n  generateMetadataParams(message: string, privateKeyHex: string): MetadataParams {\n    const key = ec.keyFromPrivate(privateKeyHex, \"hex\");\n    const setData = {\n      data: message,\n      timestamp: Math.floor(this.serverTimeOffset + Date.now() / 1000).toString(16),\n    };\n    const sig = key.sign(keccak256(Buffer.from(stringify(setData), \"utf8\")));\n    return {\n      pub_key_X: key.getPublic().getX().toString(16, 64),\n      pub_key_Y: key.getPublic().getY().toString(16, 64),\n      set_data: setData,\n      signature: Buffer.from(\n        sig.r.toString(16, 64) + sig.s.toString(16, 64) + (sig.recoveryParam?.toString(16).padStart(2, \"0\").slice(-2) ?? \"00\"),\n        \"hex\"\n      ).toString(\"base64\"),\n    };\n  }\n\n  generatePubKeyParams(privateKeyHex: string): PubKeyParams {\n    const key = ec.keyFromPrivate(privateKeyHex, \"hex\");\n    return {\n      pub_key_X: key.getPublic().getX().toString(16, 64),\n      pub_key_Y: key.getPublic().getY().toString(16, 64),\n    };\n  }\n\n  async setMetadata(data: MetadataParams, namespace: string | null, options?: RequestInit): Promise<string> {\n    const params = namespace !== null ? { ...data, namespace } : data;\n    const metadataResponse = await post<{ message: string }>(`${this.metadataHost}/set`, params, options, { useAPIKey: true });\n    return metadataResponse.message;\n  }\n\n  async getMetadata(pubKey: PubKeyParams, namespace: string | null, options?: RequestInit): Promise<string> {\n    const params = namespace !== null ? { ...pubKey, namespace } : pubKey;\n    const metadataResponse = await post<{ message: string }>(`${this.metadataHost}/get`, params, options, { useAPIKey: true });\n    return metadataResponse.message;\n  }\n}\n\nexport default MetadataStorageLayer;\n","import { decrypt, Ecies, encrypt, getPublic } from \"@toruslabs/eccrypto\";\n\nimport MetadataStorageLayer, { PubKeyParams } from \"./MetadataStorageLayer\";\nimport { ec } from \"./utils\";\n\nconst WEBAUTHN_TORUS_SHARE = \"webauthn_torus_share\";\nconst WEBAUTHN_DEVICE_SHARE = \"webauthn_device_share\";\n\nexport type EciesHex = {\n  iv: string;\n  ephemPublicKey: string;\n  ciphertext: string;\n  mac: string;\n};\n\nexport function encParamsHexToBuf(encParamsHex: EciesHex): Ecies {\n  return {\n    iv: Buffer.from(encParamsHex.iv, \"hex\"),\n    ephemPublicKey: Buffer.from(encParamsHex.ephemPublicKey, \"hex\"),\n    ciphertext: Buffer.from(encParamsHex.ciphertext, \"hex\"),\n    mac: Buffer.from(encParamsHex.mac, \"hex\"),\n  };\n}\n\nexport function encParamsBufToHex(encParams: Ecies): EciesHex {\n  return {\n    iv: Buffer.from(encParams.iv).toString(\"hex\"),\n    ephemPublicKey: Buffer.from(encParams.ephemPublicKey).toString(\"hex\"),\n    ciphertext: Buffer.from(encParams.ciphertext).toString(\"hex\"),\n    mac: Buffer.from(encParams.mac).toString(\"hex\"),\n  };\n}\n\nexport async function encryptData(privKeyHex: string, d: unknown): Promise<string> {\n  const serializedDec = JSON.stringify(d);\n  const serializedBuf = Buffer.from(serializedDec, \"utf-8\");\n  const encParams = await encrypt(getPublic(Buffer.from(privKeyHex, \"hex\")), serializedBuf);\n  const encParamsHex = encParamsBufToHex(encParams);\n  const sData = JSON.stringify(encParamsHex);\n  return sData;\n}\n\nexport async function decryptData<T>(privKeyHex: string, d: string): Promise<T> {\n  const encParamsHex: EciesHex = JSON.parse(d);\n  const encParams = encParamsHexToBuf(encParamsHex);\n  const keyPair = ec.keyFromPrivate(privKeyHex);\n  const serializedBuf = await decrypt(Buffer.from(keyPair.getPrivate().toString(\"hex\", 64), \"hex\"), encParams);\n  const serializedDec = serializedBuf.toString(\"utf-8\");\n  const data: T = JSON.parse(serializedDec);\n  return data;\n}\n\nexport async function getAndDecryptData<T>(m: MetadataStorageLayer, privKeyHex: string, namespace: string): Promise<Record<string, T> | null> {\n  const keyPair = ec.keyFromPrivate(privKeyHex);\n  const pubKey = keyPair.getPublic();\n  const serializedData = await m.getMetadata({ pub_key_X: pubKey.getX().toString(16), pub_key_Y: pubKey.getY().toString(16) }, namespace);\n  if (!serializedData) {\n    return null;\n  }\n  const data = await decryptData<T>(privKeyHex, serializedData);\n  return data as Record<string, T>;\n}\n\nexport async function encryptAndSetData(m: MetadataStorageLayer, privKeyHex: string, d: Record<string, unknown>, namespace: string): Promise<void> {\n  const sData = await encryptData(privKeyHex, d);\n  const metadataParams = m.generateMetadataParams(sData, privKeyHex);\n  await m.setMetadata(metadataParams, namespace);\n}\n\nexport async function setTorusShare(\n  m: MetadataStorageLayer,\n  webAuthnPubKey: PubKeyParams,\n  webAuthnRefHex: string,\n  subspace: string,\n  subspaceData: unknown\n): Promise<void> {\n  const refKeyPair = ec.keyFromPrivate(webAuthnRefHex);\n  const privKey = refKeyPair.getPrivate();\n  const pubKey = ec.keyFromPublic({\n    x: webAuthnPubKey.pub_key_X,\n    y: webAuthnPubKey.pub_key_Y,\n  });\n  const data = await getAndDecryptData(m, webAuthnRefHex, WEBAUTHN_TORUS_SHARE);\n  let d: Record<string, unknown> = {};\n  if (data) d = data;\n  const serializedSubspaceData = JSON.stringify(subspaceData);\n  const serializedSubspaceDataBuf = Buffer.from(serializedSubspaceData, \"utf-8\");\n  const encSubspaceData = await encrypt(Buffer.from(pubKey.getPublic(\"hex\"), \"hex\"), serializedSubspaceDataBuf);\n  const encSubspaceDataHex = encParamsBufToHex(encSubspaceData);\n  d[subspace] = encSubspaceDataHex;\n  await encryptAndSetData(m, privKey.toString(\"hex\", 64), d, WEBAUTHN_TORUS_SHARE);\n}\n\nexport async function setDeviceShare(m: MetadataStorageLayer, webAuthnRefHex: string, subspace: string, subspaceData: unknown): Promise<void> {\n  const keyPair = ec.keyFromPrivate(webAuthnRefHex);\n  const privKey = keyPair.getPrivate();\n  const data = await getAndDecryptData(m, webAuthnRefHex, WEBAUTHN_DEVICE_SHARE);\n  let d: Record<string, unknown> = {};\n  if (data) d = data;\n  d[subspace] = subspaceData;\n  await encryptAndSetData(m, privKey.toString(\"hex\", 64), d, WEBAUTHN_DEVICE_SHARE);\n}\n\nexport async function getTorusShare<T>(m: MetadataStorageLayer, webAuthnKeyHex: string, webAuthnRefHex: string, subspace: string): Promise<T | null> {\n  const data = await getAndDecryptData<EciesHex>(m, webAuthnRefHex, WEBAUTHN_TORUS_SHARE);\n  if (!data) return null;\n  const encParamsHex = data[subspace];\n  if (!encParamsHex) return null;\n  const encParams = encParamsHexToBuf(encParamsHex);\n  const keyPair = ec.keyFromPrivate(webAuthnKeyHex);\n  const privKey = keyPair.getPrivate();\n  const serializedSubspaceDataBuf = await decrypt(Buffer.from(privKey.toString(\"hex\", 64), \"hex\"), encParams);\n  const serializedSubspaceData = serializedSubspaceDataBuf.toString(\"utf-8\");\n  const subspaceData = JSON.parse(serializedSubspaceData);\n  return subspaceData;\n}\n\nexport async function getDeviceShare<T>(m: MetadataStorageLayer, webAuthnRefHex: string, subspace: string): Promise<T | null> {\n  const data = await getAndDecryptData<T>(m, webAuthnRefHex, WEBAUTHN_DEVICE_SHARE);\n  if (data) return data[subspace];\n  return null;\n}\n"],"names":["keccak256","a","Buffer","from","keccakHash","ec","EC","MetadataStorageLayer","constructor","metadataHost","arguments","length","undefined","serverTimeOffset","_defineProperty","setAPIKey","apiKey","setEmbedHost","embedHost","generateMetadataParams","message","privateKeyHex","_sig$recoveryParam$to","_sig$recoveryParam","key","keyFromPrivate","setData","data","timestamp","Math","floor","Date","now","toString","sig","sign","stringify","pub_key_X","getPublic","getX","pub_key_Y","getY","set_data","signature","r","s","recoveryParam","padStart","slice","generatePubKeyParams","setMetadata","namespace","options","params","_objectSpread","metadataResponse","post","useAPIKey","getMetadata","pubKey","WEBAUTHN_TORUS_SHARE","WEBAUTHN_DEVICE_SHARE","encParamsHexToBuf","encParamsHex","iv","ephemPublicKey","ciphertext","mac","encParamsBufToHex","encParams","encryptData","privKeyHex","d","serializedDec","JSON","serializedBuf","encrypt","sData","decryptData","parse","keyPair","decrypt","getPrivate","getAndDecryptData","m","serializedData","encryptAndSetData","metadataParams","setTorusShare","webAuthnPubKey","webAuthnRefHex","subspace","subspaceData","refKeyPair","privKey","keyFromPublic","x","y","serializedSubspaceData","serializedSubspaceDataBuf","encSubspaceData","encSubspaceDataHex","setDeviceShare","getTorusShare","webAuthnKeyHex","getDeviceShare"],"mappings":"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"}