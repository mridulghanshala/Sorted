/******/ (() => { // webpackBootstrap
/******/ 	"use strict";
/******/ 	// The require scope
/******/ 	var __webpack_require__ = {};
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/compat get default export */
/******/ 	(() => {
/******/ 		// getDefaultExport function for compatibility with non-harmony modules
/******/ 		__webpack_require__.n = (module) => {
/******/ 			var getter = module && module.__esModule ?
/******/ 				() => (module['default']) :
/******/ 				() => (module);
/******/ 			__webpack_require__.d(getter, { a: getter });
/******/ 			return getter;
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/define property getters */
/******/ 	(() => {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = (exports, definition) => {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	(() => {
/******/ 		__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	(() => {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = (exports) => {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	})();
/******/ 	
/************************************************************************/
var __webpack_exports__ = {};
// ESM COMPAT FLAG
__webpack_require__.r(__webpack_exports__);

// EXPORTS
__webpack_require__.d(__webpack_exports__, {
  BUILD_ENV: () => (/* reexport */ BUILD_ENV),
  BrowserStorage: () => (/* reexport */ BrowserStorage),
  LANGUAGES: () => (/* reexport */ LANGUAGES),
  LOGIN_PROVIDER: () => (/* reexport */ LOGIN_PROVIDER),
  MFA_FACTOR: () => (/* reexport */ MFA_FACTOR),
  MFA_LEVELS: () => (/* reexport */ MFA_LEVELS),
  MemoryStore: () => (/* reexport */ MemoryStore),
  OPENLOGIN_ACTIONS: () => (/* reexport */ OPENLOGIN_ACTIONS),
  OPENLOGIN_NETWORK: () => (/* reexport */ OPENLOGIN_NETWORK),
  SUPPORTED_KEY_CURVES: () => (/* reexport */ SUPPORTED_KEY_CURVES),
  THEME_MODES: () => (/* reexport */ THEME_MODES),
  TORUS_LEGACY_NETWORK: () => (/* reexport */ constants_namespaceObject.TORUS_LEGACY_NETWORK),
  TORUS_SAPPHIRE_NETWORK: () => (/* reexport */ constants_namespaceObject.TORUS_SAPPHIRE_NETWORK),
  UX_MODE: () => (/* reexport */ UX_MODE),
  base64toJSON: () => (/* reexport */ base64toJSON),
  base64url: () => (/* reexport */ base64url),
  jsonToBase64: () => (/* reexport */ jsonToBase64),
  safeatob: () => (/* reexport */ safeatob),
  safebtoa: () => (/* reexport */ safebtoa),
  storageAvailable: () => (/* reexport */ storageAvailable),
  storeKey: () => (/* reexport */ storeKey)
});

;// CONCATENATED MODULE: external "@babel/runtime/helpers/defineProperty"
const defineProperty_namespaceObject = require("@babel/runtime/helpers/defineProperty");
var defineProperty_default = /*#__PURE__*/__webpack_require__.n(defineProperty_namespaceObject);
;// CONCATENATED MODULE: external "base64url"
const external_base64url_namespaceObject = require("base64url");
var external_base64url_default = /*#__PURE__*/__webpack_require__.n(external_base64url_namespaceObject);
;// CONCATENATED MODULE: ./src/utils.ts

const base64url = (external_base64url_default());
function safebtoa(str) {
  return base64url.encode(str);
}
function safeatob(str) {
  // Going backwards: from bytestream, to percent-encoding, to original string.
  return base64url.decode(str);
}
function base64toJSON(b64str) {
  return JSON.parse(base64url.decode(b64str));
}
function jsonToBase64(json) {
  return base64url.encode(JSON.stringify(json));
}
function storageAvailable(type) {
  let storageExists = false;
  let storageLength = 0;
  let storage;
  try {
    storage = window[type];
    storageExists = true;
    storageLength = storage.length;
    const x = "__storage_test__";
    storage.setItem(x, x);
    storage.removeItem(x);
    return true;
  } catch (err) {
    const error = err;
    return error && (
    // everything except Firefox
    error.code === 22 ||
    // Firefox
    error.code === 1014 ||
    // test name field too, because code might not be present
    // everything except Firefox
    error.name === "QuotaExceededError" ||
    // Firefox
    error.name === "NS_ERROR_DOM_QUOTA_REACHED") &&
    // acknowledge QuotaExceededError only if there's something already stored
    storageExists && storageLength !== 0;
  }
}
;// CONCATENATED MODULE: ./src/browserStorage.ts

var _class2;

class MemoryStore {
  constructor() {
    defineProperty_default()(this, "store", {});
  }
  getItem(key) {
    return this.store[key] || null;
  }
  setItem(key, value) {
    this.store[key] = value;
  }
}
class BrowserStorage {
  constructor(storeKey, storage) {
    defineProperty_default()(this, "storage", void 0);
    defineProperty_default()(this, "_storeKey", void 0);
    this.storage = storage;
    this._storeKey = storeKey;
    try {
      if (!storage.getItem(storeKey)) {
        this.resetStore();
      }
    } catch (error) {
      // Storage is not available
    }
  }
  static getInstance(key) {
    let storageKey = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : "local";
    if (!this.instance) {
      let storage;
      if (storageKey === "local" && storageAvailable("localStorage")) {
        storage = window.localStorage;
      } else if (storageKey === "session" && storageAvailable("sessionStorage")) {
        storage = window.sessionStorage;
      } else {
        storage = new MemoryStore();
      }
      this.instance = new this(key, storage);
    }
    return this.instance;
  }
  toJSON() {
    return this.storage.getItem(this._storeKey);
  }
  resetStore() {
    const currStore = this.getStore();
    this.storage.setItem(this._storeKey, JSON.stringify({}));
    return currStore;
  }
  getStore() {
    return JSON.parse(this.storage.getItem(this._storeKey) || "{}");
  }
  get(key) {
    const store = JSON.parse(this.storage.getItem(this._storeKey) || "{}");
    return store[key];
  }
  set(key, value) {
    const store = JSON.parse(this.storage.getItem(this._storeKey) || "{}");
    store[key] = value;
    this.storage.setItem(this._storeKey, JSON.stringify(store));
  }
}
_class2 = BrowserStorage;
// eslint-disable-next-line no-use-before-define
defineProperty_default()(BrowserStorage, "instance", void 0);
;// CONCATENATED MODULE: external "@babel/runtime/helpers/objectSpread2"
const objectSpread2_namespaceObject = require("@babel/runtime/helpers/objectSpread2");
var objectSpread2_default = /*#__PURE__*/__webpack_require__.n(objectSpread2_namespaceObject);
;// CONCATENATED MODULE: external "@toruslabs/constants"
const constants_namespaceObject = require("@toruslabs/constants");
;// CONCATENATED MODULE: ./src/constants.ts


const storeKey = "openlogin_store";
const UX_MODE = {
  POPUP: "popup",
  REDIRECT: "redirect"
};
const OPENLOGIN_NETWORK = objectSpread2_default()(objectSpread2_default()({}, constants_namespaceObject.TORUS_SAPPHIRE_NETWORK), constants_namespaceObject.TORUS_LEGACY_NETWORK);
const SUPPORTED_KEY_CURVES = {
  SECP256K1: "secp256k1",
  ED25519: "ed25519"
};
const LOGIN_PROVIDER = {
  GOOGLE: "google",
  FACEBOOK: "facebook",
  REDDIT: "reddit",
  DISCORD: "discord",
  TWITCH: "twitch",
  APPLE: "apple",
  LINE: "line",
  GITHUB: "github",
  KAKAO: "kakao",
  LINKEDIN: "linkedin",
  TWITTER: "twitter",
  WEIBO: "weibo",
  WECHAT: "wechat",
  EMAIL_PASSWORDLESS: "email_passwordless",
  SMS_PASSWORDLESS: "sms_passwordless",
  WEBAUTHN: "webauthn",
  JWT: "jwt"
};
const MFA_LEVELS = {
  DEFAULT: "default",
  OPTIONAL: "optional",
  MANDATORY: "mandatory",
  NONE: "none"
};
const OPENLOGIN_ACTIONS = {
  LOGIN: "login",
  ENABLE_MFA: "enable_mfa",
  MODIFY_MFA: "modify_mfa"
};
const BUILD_ENV = {
  PRODUCTION: "production",
  DEVELOPMENT: "development",
  STAGING: "staging",
  TESTING: "testing"
};

;// CONCATENATED MODULE: ./src/interfaces.ts
/**
 * {@label loginProviderType}
 */

// autocomplete workaround https://github.com/microsoft/TypeScript/issues/29729

const LANGUAGES = {
  en: "en",
  ja: "ja",
  ko: "ko",
  de: "de",
  zh: "zh",
  es: "es",
  fr: "fr",
  pt: "pt",
  nl: "nl"
};
const THEME_MODES = {
  light: "light",
  dark: "dark",
  auto: "auto"
};
const MFA_FACTOR = {
  DEVICE: "deviceShareFactor",
  BACKUP_SHARE: "backUpShareFactor",
  SOCIAL_BACKUP: "socialBackupFactor",
  PASSWORD: "passwordFactor"
};
;// CONCATENATED MODULE: ./src/index.ts




module.exports = __webpack_exports__;
/******/ })()
;
//# sourceMappingURL=openloginUtils.cjs.js.map