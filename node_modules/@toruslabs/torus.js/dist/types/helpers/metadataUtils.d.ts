/// <reference types="node" />
import BN from "bn.js";
import { ec } from "elliptic";
import { EciesHex, GetOrSetNonceResult, MetadataParams } from "../interfaces";
export declare function convertMetadataToNonce(params: {
    message?: string;
}): BN;
export declare function decryptNodeData(eciesData: EciesHex, ciphertextHex: string, privKey: Buffer): Promise<Buffer>;
export declare function generateMetadataParams(ecCurve: ec, serverTimeOffset: number, message: string, privateKey: BN): MetadataParams;
export declare function getMetadata(legacyMetadataHost: string, data: Omit<MetadataParams, "set_data" | "signature">, options?: RequestInit): Promise<BN>;
export declare function getOrSetNonce(legacyMetadataHost: string, ecCurve: ec, serverTimeOffset: number, X: string, Y: string, privKey?: BN, getOnly?: boolean): Promise<GetOrSetNonceResult>;
export declare function getNonce(legacyMetadataHost: string, ecCurve: ec, serverTimeOffset: number, X: string, Y: string, privKey?: BN): Promise<GetOrSetNonceResult>;
