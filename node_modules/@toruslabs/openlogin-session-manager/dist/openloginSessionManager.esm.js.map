{"version":3,"file":"openloginSessionManager.esm.js","sources":["../src/openloginSessionManager.ts"],"sourcesContent":["import { BaseSessionManager } from \"@toruslabs/base-session-manager\";\nimport { generatePrivate, getPublic, sign } from \"@toruslabs/eccrypto\";\nimport { decryptData, encryptData, keccak256 } from \"@toruslabs/metadata-helpers\";\n\nimport { OpenloginSessionManagerOptions, SessionApiResponse, SessionRequestBody } from \"./interfaces\";\n\nconst DEFAULT_SESSION_TIMEOUT = 86400;\nexport class OpenloginSessionManager<T> extends BaseSessionManager<T> {\n  sessionServerBaseUrl = \"https://broadcast-server.tor.us\";\n\n  sessionNamespace: string;\n\n  sessionTime: number = DEFAULT_SESSION_TIMEOUT;\n\n  public sessionId: string = \"\";\n\n  constructor({ sessionServerBaseUrl, sessionNamespace, sessionTime, sessionId }: OpenloginSessionManagerOptions = {}) {\n    super();\n\n    if (sessionServerBaseUrl) {\n      this.sessionServerBaseUrl = sessionServerBaseUrl;\n    }\n    if (sessionNamespace) this.sessionNamespace = sessionNamespace;\n    if (sessionTime) this.sessionTime = sessionTime;\n    if (sessionId) this.sessionId = sessionId.padStart(64, \"0\");\n  }\n\n  static generateRandomSessionKey(): string {\n    return generatePrivate().toString(\"hex\").padStart(64, \"0\");\n  }\n\n  async createSession(data: T): Promise<string> {\n    super.checkSessionParams();\n    const privKey = Buffer.from(this.sessionId, \"hex\");\n    const pubKey = getPublic(privKey).toString(\"hex\");\n    const encData = await encryptData(this.sessionId, data);\n    const signature = (await sign(privKey, keccak256(Buffer.from(encData, \"utf8\")))).toString(\"hex\");\n\n    const body: SessionRequestBody = {\n      key: pubKey,\n      data: encData,\n      signature,\n      namespace: this.sessionNamespace,\n      timeout: this.sessionTime,\n    };\n\n    await super.request({ method: \"POST\", url: `${this.sessionServerBaseUrl}/store/set`, data: body });\n\n    return this.sessionId;\n  }\n\n  async authorizeSession(): Promise<T> {\n    super.checkSessionParams();\n    const pubkey = getPublic(Buffer.from(this.sessionId, \"hex\")).toString(\"hex\");\n    const url = new URL(`${this.sessionServerBaseUrl}/store/get`);\n    url.searchParams.append(\"key\", pubkey);\n    if (this.sessionNamespace) url.searchParams.append(\"namespace\", this.sessionNamespace);\n\n    const result = await super.request<SessionApiResponse>({ url: url.toString() });\n    if (!result.message) {\n      throw new Error(\"Session Expired or Invalid public key\");\n    }\n\n    const response = await decryptData<T & { error?: string }>(this.sessionId, result.message);\n    if (response.error) {\n      throw new Error(\"There was an error decrypting data.\");\n    }\n\n    return response;\n  }\n\n  async updateSession(data: Partial<T>): Promise<void> {\n    super.checkSessionParams();\n    const privKey = Buffer.from(this.sessionId, \"hex\");\n    const pubKey = getPublic(privKey).toString(\"hex\");\n    const encData = await encryptData(this.sessionId, data);\n    const signature = (await sign(privKey, keccak256(Buffer.from(encData, \"utf8\")))).toString(\"hex\");\n\n    const body: SessionRequestBody = {\n      key: pubKey,\n      data: encData,\n      signature,\n      namespace: this.sessionNamespace,\n    };\n\n    await super.request({ method: \"PUT\", url: `${this.sessionServerBaseUrl}/store/update`, data: body });\n  }\n\n  async invalidateSession(): Promise<boolean> {\n    super.checkSessionParams();\n    const privKey = Buffer.from(this.sessionId, \"hex\");\n    const pubKey = getPublic(privKey).toString(\"hex\");\n    const encData = await encryptData(this.sessionId, {});\n    const signature = (await sign(privKey, keccak256(Buffer.from(encData, \"utf8\")))).toString(\"hex\");\n\n    const data: SessionRequestBody = {\n      key: pubKey,\n      data: encData,\n      signature,\n      namespace: this.sessionNamespace,\n      timeout: 1,\n    };\n\n    await super.request({ method: \"POST\", url: `${this.sessionServerBaseUrl}/store/set`, data });\n    this.sessionId = \"\";\n    return true;\n  }\n}\n"],"names":["DEFAULT_SESSION_TIMEOUT","OpenloginSessionManager","BaseSessionManager","constructor","sessionServerBaseUrl","sessionNamespace","sessionTime","sessionId","arguments","length","undefined","_defineProperty","padStart","generateRandomSessionKey","generatePrivate","toString","createSession","data","checkSessionParams","privKey","Buffer","from","pubKey","getPublic","encData","encryptData","signature","sign","keccak256","body","key","namespace","timeout","request","method","url","authorizeSession","pubkey","URL","searchParams","append","result","message","Error","response","decryptData","error","updateSession","invalidateSession"],"mappings":"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"}