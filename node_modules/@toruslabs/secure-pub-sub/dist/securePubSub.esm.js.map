{"version":3,"file":"securePubSub.esm.js","sources":["../src/log.ts","../src/SecurePubSub.ts"],"sourcesContent":["import log from \"loglevel\";\n\nexport default log.getLogger(\"SecurePubSub\");\n","import { getPublic, sign } from \"@toruslabs/eccrypto\";\nimport { post, setLogLevel } from \"@toruslabs/http-helpers\";\nimport { decryptData, encryptData, keccak256 } from \"@toruslabs/metadata-helpers\";\nimport { LogLevelDesc } from \"loglevel\";\nimport { io, type Socket } from \"socket.io-client\";\n\nimport { ISecurePubSubOptions, SetDataBody } from \"./interfaces\";\nimport log from \"./log\";\n\nexport class SecurePubSub {\n  options: ISecurePubSubOptions;\n\n  SOCKET_CONN: Socket | null = null;\n\n  constructor(options: ISecurePubSubOptions = {}) {\n    this.options = options;\n    this.options.timeout = options.timeout || 600; // 10 mins is default timeout\n    this.options.serverUrl = options.serverUrl || \"https://broadcast-server.tor.us\";\n    this.options.enableLogging = options.enableLogging || false;\n    this.options.namespace = options.namespace || \"\";\n    if (this.options.enableLogging) log.enableAll();\n    else log.disableAll();\n  }\n\n  static setLogLevel(level: LogLevelDesc) {\n    log.setLevel(level);\n    setLogLevel(level);\n  }\n\n  async publish(topic: string, message: string): Promise<void> {\n    const topicPrivKey = keccak256(Buffer.from(topic, \"utf8\"));\n    const encryptedData = await encryptData(topicPrivKey.toString(\"hex\"), message);\n    const signature = await sign(topicPrivKey, keccak256(Buffer.from(encryptedData, \"utf8\")));\n    const fetchBody: SetDataBody = {\n      key: getPublic(topicPrivKey).toString(\"hex\"), // already padded\n      data: encryptedData,\n      signature: signature.toString(\"hex\"),\n      timeout: this.options.timeout,\n      namespace: this.options.namespace,\n    };\n    return post(`${this.options.serverUrl}/channel/set`, fetchBody);\n  }\n\n  async subscribe(topic: string): Promise<string> {\n    let isPromisePending = true;\n    const topicPrivKey = keccak256(Buffer.from(topic, \"utf8\"));\n    const topicPubKey = getPublic(topicPrivKey).toString(\"hex\"); // already padded\n    const currentSocketConnection = this.getSocketConnection();\n    if (currentSocketConnection.connected) {\n      log.debug(\"already connected with socket\");\n      currentSocketConnection.emit(\"check_auth_status\", topicPubKey, { namespace: this.options.namespace });\n    } else {\n      currentSocketConnection.once(\"connect\", () => {\n        log.debug(\"connected with socket\");\n        currentSocketConnection.emit(\"check_auth_status\", topicPubKey, { namespace: this.options.namespace });\n      });\n    }\n\n    const reconnect = () => {\n      currentSocketConnection.once(\"connect\", async () => {\n        log.debug(\"connected with socket using reconnect\");\n        if (isPromisePending) currentSocketConnection.emit(\"check_auth_status\", topicPubKey, { namespace: this.options.namespace });\n      });\n    };\n\n    const visibilityListener = () => {\n      if (!isPromisePending) document.removeEventListener(\"visibilitychange\", visibilityListener);\n      // if not connected, then wait for connection and ping server for latest msg.\n      if (!currentSocketConnection.connected && document.visibilityState === \"visible\") {\n        reconnect();\n      }\n    };\n\n    const disconnectListener = () => {\n      log.debug(\"socket disconnected\", isPromisePending);\n      if (isPromisePending) {\n        log.error(\"socket disconnected unexpectedly, reconnecting socket\");\n        reconnect();\n      } else {\n        currentSocketConnection.removeListener(\"disconnect\", disconnectListener);\n      }\n    };\n\n    currentSocketConnection.on(\"disconnect\", disconnectListener);\n\n    const returnPromise = new Promise<string>((resolve, reject) => {\n      const listener = async (ev: string) => {\n        try {\n          const decData = await decryptData(topicPrivKey.toString(\"hex\"), ev);\n          log.info(\"got data\", decData);\n          resolve(decData as string);\n        } catch (error) {\n          log.error(error);\n          reject(error);\n        } finally {\n          isPromisePending = false;\n          document.removeEventListener(\"visibilitychange\", visibilityListener);\n        }\n      };\n      log.info(\"listening to\", `${topicPubKey}_success`);\n      currentSocketConnection.once(`${topicPubKey}_success`, listener);\n    });\n\n    if (typeof document !== \"undefined\") document.addEventListener(\"visibilitychange\", visibilityListener);\n    return returnPromise;\n  }\n\n  public cleanup() {\n    if (this.SOCKET_CONN) {\n      this.SOCKET_CONN.disconnect();\n      this.SOCKET_CONN = null;\n    }\n  }\n\n  private getSocketConnection(): Socket {\n    if (this.SOCKET_CONN) return this.SOCKET_CONN;\n    const localSocketConnection = io(this.options.serverUrl, {\n      transports: [\"websocket\", \"polling\"], // use WebSocket first, if available\n      withCredentials: true,\n      reconnectionDelayMax: 10000,\n      reconnectionAttempts: 10,\n    });\n\n    localSocketConnection.on(\"connect_error\", (err) => {\n      // revert to classic upgrade\n      localSocketConnection.io.opts.transports = [\"polling\", \"websocket\"];\n      log.error(\"connect error\", err);\n    });\n    localSocketConnection.on(\"connect\", async () => {\n      const { engine } = localSocketConnection.io;\n      log.debug(\"initially connected to\", engine.transport.name); // in most cases, prints \"polling\"\n      engine.once(\"upgrade\", () => {\n        // called when the transport is upgraded (i.e. from HTTP long-polling to WebSocket)\n        log.debug(\"upgraded\", engine.transport.name); // in most cases, prints \"websocket\"\n      });\n      engine.once(\"close\", (reason) => {\n        // called when the underlying connection is closed\n        log.debug(\"connection closed\", reason);\n      });\n    });\n\n    localSocketConnection.on(\"error\", (err) => {\n      log.error(\"socket errored\", err);\n      localSocketConnection.disconnect();\n    });\n\n    this.SOCKET_CONN = localSocketConnection;\n    return this.SOCKET_CONN;\n  }\n}\n"],"names":["log","getLogger","SecurePubSub","constructor","options","arguments","length","undefined","_defineProperty","timeout","serverUrl","enableLogging","namespace","enableAll","disableAll","setLogLevel","level","setLevel","publish","topic","message","topicPrivKey","keccak256","Buffer","from","encryptedData","encryptData","toString","signature","sign","fetchBody","key","getPublic","data","post","subscribe","isPromisePending","topicPubKey","currentSocketConnection","getSocketConnection","connected","debug","emit","once","reconnect","visibilityListener","document","removeEventListener","visibilityState","disconnectListener","error","removeListener","on","returnPromise","Promise","resolve","reject","listener","ev","decData","decryptData","info","addEventListener","cleanup","SOCKET_CONN","disconnect","localSocketConnection","io","transports","withCredentials","reconnectionDelayMax","reconnectionAttempts","err","opts","engine","transport","name","reason"],"mappings":"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"}