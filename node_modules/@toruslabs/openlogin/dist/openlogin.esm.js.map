{"version":3,"file":"openlogin.esm.js","sources":["../src/errors.ts","../src/logger.ts","../src/utils.ts","../src/PopupHandler.ts","../src/OpenLogin.ts"],"sourcesContent":["import { CustomError } from \"ts-custom-error\";\n\nexport interface IOpenloginError extends CustomError {\n  code: number;\n  message: string;\n  toString(): string;\n}\n\nexport type ErrorCodes = {\n  [key: number]: string;\n};\n\nexport abstract class OpenloginError extends CustomError implements IOpenloginError {\n  code: number;\n\n  message: string;\n\n  public constructor(code: number, message?: string) {\n    // takes care of stack and proto\n    super(message);\n\n    this.code = code;\n    this.message = message || \"\";\n    // Set name explicitly as minification can mangle class names\n    Object.defineProperty(this, \"name\", { value: \"OpenloginError\" });\n  }\n\n  toJSON(): IOpenloginError {\n    return {\n      name: this.name,\n      code: this.code,\n      message: this.message,\n    };\n  }\n\n  toString(): string {\n    return JSON.stringify(this.toJSON());\n  }\n}\n\nexport class InitializationError extends OpenloginError {\n  protected static messages: ErrorCodes = {\n    5000: \"Custom\",\n    5001: \"Invalid constructor params\",\n    5002: \"SDK not initialized. please call init first\",\n  };\n\n  public constructor(code: number, message?: string) {\n    // takes care of stack and proto\n    super(code, message);\n\n    // Set name explicitly as minification can mangle class names\n    Object.defineProperty(this, \"name\", { value: \"InitializationError\" });\n  }\n\n  public static fromCode(code: number, extraMessage = \"\"): OpenloginError {\n    return new InitializationError(code, `${InitializationError.messages[code]}, ${extraMessage}`);\n  }\n\n  public static invalidParams(extraMessage = \"\"): OpenloginError {\n    return InitializationError.fromCode(5001, extraMessage);\n  }\n\n  public static notInitialized(extraMessage = \"\"): OpenloginError {\n    return InitializationError.fromCode(5002, extraMessage);\n  }\n}\n\n/**\n * login errors\n */\n\nexport class LoginError extends OpenloginError {\n  protected static messages: ErrorCodes = {\n    5000: \"Custom\",\n    5111: \"Invalid login params\",\n    5112: \"User not logged in.\",\n    5113: \"login popup has been closed by the user\",\n    5114: \"Login failed\",\n    5115: \"Popup was blocked. Please call this function as soon as user clicks button or use redirect mode\",\n  };\n\n  public constructor(code: number, message?: string) {\n    // takes care of stack and proto\n    super(code, message);\n\n    // Set name explicitly as minification can mangle class names\n    Object.defineProperty(this, \"name\", { value: \"LoginError\" });\n  }\n\n  public static fromCode(code: number, extraMessage = \"\"): OpenloginError {\n    return new LoginError(code, `${LoginError.messages[code]}, ${extraMessage}`);\n  }\n\n  public static invalidLoginParams(extraMessage = \"\"): OpenloginError {\n    return LoginError.fromCode(5111, extraMessage);\n  }\n\n  public static userNotLoggedIn(extraMessage = \"\"): OpenloginError {\n    return LoginError.fromCode(5112, extraMessage);\n  }\n\n  public static popupClosed(extraMessage = \"\"): OpenloginError {\n    return LoginError.fromCode(5113, extraMessage);\n  }\n\n  public static loginFailed(extraMessage = \"\"): OpenloginError {\n    return LoginError.fromCode(5114, extraMessage);\n  }\n\n  public static popupBlocked(extraMessage = \"\"): OpenloginError {\n    return LoginError.fromCode(5115, extraMessage);\n  }\n}\n","import { getLogger } from \"loglevel\";\n\nexport const loglevel = getLogger(\"openlogin\");\n\nloglevel.setLevel(\"error\");\n","import { getPublic, sign } from \"@toruslabs/eccrypto\";\nimport { keccak256 } from \"@toruslabs/metadata-helpers\";\nimport { base64url, LOGIN_PROVIDER, safeatob, safebtoa } from \"@toruslabs/openlogin-utils\";\nimport bowser from \"bowser\";\n\nimport { loglevel as log } from \"./logger\";\n\n// don't use destructuring for process.env cause it messes up webpack env plugin\nexport const version = process.env.OPENLOGIN_VERSION;\n\nexport async function whitelistUrl(clientId: string, appKey: string, origin: string): Promise<string> {\n  const appKeyBuf = Buffer.from(appKey.padStart(64, \"0\"), \"hex\");\n  if (base64url.encode(getPublic(appKeyBuf)) !== clientId) throw new Error(\"appKey mismatch\");\n  const sig = await sign(appKeyBuf, keccak256(Buffer.from(origin, \"utf8\")));\n  return base64url.encode(sig);\n}\n\nexport type HashQueryParamResult = {\n  sessionId?: string;\n  sessionNamespace?: string;\n  error?: string;\n  state?: string;\n};\n\nexport function getHashQueryParams(replaceUrl = false): HashQueryParamResult {\n  const result: HashQueryParamResult = {};\n\n  const url = new URL(window.location.href);\n  url.searchParams.forEach((value: string, key: string) => {\n    if (key !== \"result\") {\n      result[key as keyof HashQueryParamResult] = value;\n    }\n  });\n  const queryResult = url.searchParams.get(\"result\");\n  if (queryResult) {\n    try {\n      const queryParams = JSON.parse(safeatob(queryResult));\n      Object.keys(queryParams).forEach((key: string) => {\n        result[key as keyof HashQueryParamResult] = queryParams[key];\n      });\n    } catch (error) {\n      log.error(error);\n    }\n  }\n\n  const hash = url.hash.substring(1);\n  const hashUrl = new URL(`${window.location.origin}/?${hash}`);\n  hashUrl.searchParams.forEach((value: string, key: string) => {\n    if (key !== \"result\") {\n      result[key as keyof HashQueryParamResult] = value;\n    }\n  });\n  const hashResult = hashUrl.searchParams.get(\"result\");\n\n  if (hashResult) {\n    try {\n      const hashParams = JSON.parse(safeatob(hashResult));\n      Object.keys(hashParams).forEach((key: string) => {\n        result[key as keyof HashQueryParamResult] = hashParams[key];\n      });\n    } catch (error) {\n      log.error(error);\n    }\n  }\n\n  if (replaceUrl) {\n    const cleanUrl = new URL(window.location.origin + window.location.pathname);\n    cleanUrl.search = window.location.search;\n    if (hashResult) {\n      const hashParams = JSON.parse(safeatob(hashResult));\n      delete hashParams.sessionId;\n      delete hashParams.sessionNamespace;\n      delete hashParams.error;\n      cleanUrl.hash = safebtoa(JSON.stringify(hashParams));\n    }\n    window.history.replaceState({ ...window.history.state, as: cleanUrl.href, url: cleanUrl.href }, \"\", cleanUrl.href);\n  }\n\n  return result;\n}\n\nexport function constructURL(params: { baseURL: string; query?: Record<string, unknown>; hash?: Record<string, unknown> }): string {\n  const { baseURL, query, hash } = params;\n\n  const url = new URL(baseURL);\n  if (query) {\n    Object.keys(query).forEach((key) => {\n      url.searchParams.append(key, query[key] as string);\n    });\n  }\n  if (hash) {\n    const h = new URL(constructURL({ baseURL, query: hash })).searchParams.toString();\n    url.hash = h;\n  }\n  return url.toString();\n}\n\nexport function getPopupFeatures(): string {\n  if (typeof window === \"undefined\") return \"\";\n  // Fixes dual-screen position                             Most browsers      Firefox\n  const dualScreenLeft = window.screenLeft !== undefined ? window.screenLeft : window.screenX;\n  const dualScreenTop = window.screenTop !== undefined ? window.screenTop : window.screenY;\n\n  const w = 1200;\n  const h = 700;\n\n  const width = window.innerWidth\n    ? window.innerWidth\n    : document.documentElement.clientWidth\n      ? document.documentElement.clientWidth\n      : window.screen.width;\n\n  const height = window.innerHeight\n    ? window.innerHeight\n    : document.documentElement.clientHeight\n      ? document.documentElement.clientHeight\n      : window.screen.height;\n\n  const systemZoom = 1; // No reliable estimate\n\n  const left = Math.abs((width - w) / 2 / systemZoom + dualScreenLeft);\n  const top = Math.abs((height - h) / 2 / systemZoom + dualScreenTop);\n  const features = `titlebar=0,toolbar=0,status=0,location=0,menubar=0,height=${h / systemZoom},width=${w / systemZoom},top=${top},left=${left}`;\n  return features;\n}\n\nexport function isMobileOrTablet(): boolean {\n  if (typeof window === \"undefined\") return false;\n  const browser = bowser.getParser(window.navigator.userAgent);\n  const platform = browser.getPlatform();\n  return platform.type === bowser.PLATFORMS_MAP.tablet || platform.type === bowser.PLATFORMS_MAP.mobile;\n}\n\nexport function getTimeout(loginProvider: string) {\n  if ((loginProvider === LOGIN_PROVIDER.FACEBOOK || loginProvider === LOGIN_PROVIDER.LINE) && isMobileOrTablet()) {\n    return 1000 * 60 * 5; // 5 minutes to finish the login\n  }\n  return 1000 * 10; // 10 seconds\n}\n","import { SecurePubSub } from \"@toruslabs/secure-pub-sub\";\nimport { EventEmitter } from \"events\";\n\nimport { LoginError } from \"./errors\";\nimport { getPopupFeatures } from \"./utils\";\n\nexport interface PopupResponse {\n  sessionId?: string;\n  sessionNamespace?: string;\n  state?: string;\n  error?: string;\n}\nclass PopupHandler extends EventEmitter {\n  url: string;\n\n  target: string;\n\n  features: string;\n\n  window: Window;\n\n  windowTimer: number;\n\n  iClosedWindow: boolean;\n\n  timeout: number;\n\n  constructor({ url, target, features, timeout = 30000 }: { url: string; target?: string; features?: string; timeout?: number }) {\n    super();\n    this.url = url;\n    this.target = target || \"_blank\";\n    this.features = features || getPopupFeatures();\n    this.window = undefined;\n    this.windowTimer = undefined;\n    this.iClosedWindow = false;\n    this.timeout = timeout;\n    this._setupTimer();\n  }\n\n  _setupTimer(): void {\n    this.windowTimer = Number(\n      setInterval(() => {\n        if (this.window && this.window.closed) {\n          clearInterval(this.windowTimer);\n          setTimeout(() => {\n            if (!this.iClosedWindow) {\n              this.emit(\"close\");\n            }\n            this.iClosedWindow = false;\n            this.window = undefined;\n          }, this.timeout);\n        }\n        if (this.window === undefined) clearInterval(this.windowTimer);\n      }, 500)\n    );\n  }\n\n  open(): void {\n    this.window = window.open(this.url, this.target, this.features);\n    if (!this.window) throw LoginError.popupBlocked();\n    if (this.window?.focus) this.window.focus();\n  }\n\n  close(): void {\n    this.iClosedWindow = true;\n    if (this.window) this.window.close();\n  }\n\n  redirect(locationReplaceOnRedirect: boolean): void {\n    if (locationReplaceOnRedirect) {\n      window.location.replace(this.url);\n    } else {\n      window.location.href = this.url;\n    }\n  }\n\n  async listenOnChannel(loginId: string): Promise<PopupResponse> {\n    const securePubSub = new SecurePubSub();\n    const data = await securePubSub.subscribe(loginId);\n    this.close();\n    securePubSub.cleanup();\n    const parsedData = JSON.parse(data) as { error?: string; state?: string; data?: { sessionId?: string; sessionNamespace?: string } };\n    if (parsedData.error) {\n      return { error: parsedData.error, state: parsedData.state };\n    }\n    return parsedData.data;\n  }\n}\n\nexport default PopupHandler;\n","import { OpenloginSessionManager } from \"@toruslabs/openlogin-session-manager\";\nimport {\n  BaseLoginParams,\n  BaseRedirectParams,\n  BrowserStorage,\n  BUILD_ENV,\n  jsonToBase64,\n  LoginParams,\n  OPENLOGIN_ACTIONS,\n  OPENLOGIN_NETWORK,\n  OpenLoginOptions,\n  OpenloginSessionConfig,\n  OpenloginSessionData,\n  OpenloginUserInfo,\n  SocialMfaModParams,\n  TORUS_LEGACY_NETWORK,\n  type TORUS_LEGACY_NETWORK_TYPE,\n  UX_MODE,\n} from \"@toruslabs/openlogin-utils\";\n\nimport { InitializationError, LoginError } from \"./errors\";\nimport { loglevel as log } from \"./logger\";\nimport PopupHandler, { PopupResponse } from \"./PopupHandler\";\nimport { constructURL, getHashQueryParams, getTimeout, version } from \"./utils\";\n\nclass OpenLogin {\n  state: OpenloginSessionData = {};\n\n  options: OpenLoginOptions;\n\n  private sessionManager: OpenloginSessionManager<OpenloginSessionData>;\n\n  private currentStorage: BrowserStorage;\n\n  private _storageBaseKey = \"openlogin_store\";\n\n  private dappState: string;\n\n  private addVersionInUrls = true;\n\n  constructor(options: OpenLoginOptions) {\n    if (!options.clientId) throw InitializationError.invalidParams(\"clientId is required\");\n    if (!options.network) options.network = OPENLOGIN_NETWORK.SAPPHIRE_MAINNET;\n    if (!options.buildEnv) options.buildEnv = BUILD_ENV.PRODUCTION;\n    if (options.buildEnv === BUILD_ENV.DEVELOPMENT || options.buildEnv === BUILD_ENV.TESTING || options.sdkUrl) this.addVersionInUrls = false;\n    if (!options.sdkUrl && !options.useMpc) {\n      if (options.buildEnv === BUILD_ENV.DEVELOPMENT) {\n        options.sdkUrl = \"http://localhost:3000\";\n      } else if (options.buildEnv === BUILD_ENV.STAGING) {\n        options.sdkUrl = \"https://staging-auth.web3auth.io\";\n      } else if (options.buildEnv === BUILD_ENV.TESTING) {\n        options.sdkUrl = \"https://develop-auth.web3auth.io\";\n      } else {\n        options.sdkUrl = \"https://auth.web3auth.io\";\n      }\n    }\n\n    if (options.useMpc && !options.sdkUrl) {\n      if (Object.values(TORUS_LEGACY_NETWORK).includes(options.network as TORUS_LEGACY_NETWORK_TYPE))\n        throw new Error(\"MPC is not supported on legacy networks\");\n      if (options.buildEnv === BUILD_ENV.DEVELOPMENT) {\n        options.sdkUrl = \"http://localhost:3000\";\n      } else if (options.buildEnv === BUILD_ENV.STAGING) {\n        options.sdkUrl = \"https://staging-mpc-auth.web3auth.io\";\n      } else if (options.buildEnv === BUILD_ENV.TESTING) {\n        options.sdkUrl = \"https://develop-mpc-auth.web3auth.io\";\n      } else {\n        options.sdkUrl = \"https://mpc-auth.web3auth.io\";\n      }\n    }\n\n    if (!options.redirectUrl && typeof window !== \"undefined\") {\n      options.redirectUrl = `${window.location.protocol}//${window.location.host}${window.location.pathname}`;\n    }\n    if (!options.uxMode) options.uxMode = UX_MODE.REDIRECT;\n    if (typeof options.replaceUrlOnRedirect !== \"boolean\") options.replaceUrlOnRedirect = true;\n    if (!options.originData) options.originData = {};\n    if (!options.whiteLabel) options.whiteLabel = {};\n    if (!options.loginConfig) options.loginConfig = {};\n    if (!options.mfaSettings) options.mfaSettings = {};\n    if (!options.storageServerUrl) options.storageServerUrl = \"https://broadcast-server.tor.us\";\n    if (!options.storageKey) options.storageKey = \"local\";\n    if (!options.webauthnTransports) options.webauthnTransports = [\"internal\"];\n    if (!options.sessionTime) options.sessionTime = 86400;\n\n    this.options = options;\n  }\n\n  get privKey(): string {\n    if (this.options.useMpc) return this.state.factorKey || \"\";\n    return this.state.privKey ? this.state.privKey.padStart(64, \"0\") : \"\";\n  }\n\n  get coreKitKey(): string {\n    return this.state.coreKitKey ? this.state.coreKitKey.padStart(64, \"0\") : \"\";\n  }\n\n  get ed25519PrivKey(): string {\n    return this.state.ed25519PrivKey ? this.state.ed25519PrivKey.padStart(128, \"0\") : \"\";\n  }\n\n  get coreKitEd25519Key(): string {\n    return this.state.coreKitEd25519PrivKey ? this.state.coreKitEd25519PrivKey.padStart(128, \"0\") : \"\";\n  }\n\n  get sessionId(): string {\n    return this.state.sessionId || \"\";\n  }\n\n  get sessionNamespace(): string {\n    return this.options.sessionNamespace || \"\";\n  }\n\n  get appState(): string {\n    return this.state.userInfo.appState || this.dappState || \"\";\n  }\n\n  private get baseUrl(): string {\n    // testing and develop don't have versioning\n    if (!this.addVersionInUrls) return `${this.options.sdkUrl}`;\n    return `${this.options.sdkUrl}/v${version.split(\".\")[0]}`;\n  }\n\n  async init(): Promise<void> {\n    // get sessionNamespace from the redirect result.\n    const params = getHashQueryParams(this.options.replaceUrlOnRedirect);\n    if (params.sessionNamespace) this.options.sessionNamespace = params.sessionNamespace;\n\n    const storageKey = this.options.sessionNamespace ? `${this._storageBaseKey}_${this.options.sessionNamespace}` : this._storageBaseKey;\n    this.currentStorage = BrowserStorage.getInstance(storageKey, this.options.storageKey);\n\n    const sessionId = this.currentStorage.get<string>(\"sessionId\");\n\n    this.sessionManager = new OpenloginSessionManager({\n      sessionServerBaseUrl: this.options.storageServerUrl,\n      sessionNamespace: this.options.sessionNamespace,\n      sessionTime: this.options.sessionTime,\n      sessionId,\n    });\n\n    if (this.options.network === OPENLOGIN_NETWORK.TESTNET || this.options.network === OPENLOGIN_NETWORK.SAPPHIRE_DEVNET) {\n      // using console log because it shouldn't be affected by loglevel config\n      // eslint-disable-next-line no-console\n      console.log(\n        `%c WARNING! You are on ${this.options.network}. Please set network: 'mainnet' or 'sapphire_mainnet' in production`,\n        \"color: #FF0000\"\n      );\n    }\n\n    if (this.options.buildEnv !== BUILD_ENV.PRODUCTION) {\n      // using console log because it shouldn't be affected by loglevel config\n      // eslint-disable-next-line no-console\n      console.log(`%c WARNING! You are using build env ${this.options.buildEnv}. Please set buildEnv: 'production' in production`, \"color: #FF0000\");\n    }\n\n    if (params.error) {\n      this.dappState = params.state;\n      throw LoginError.loginFailed(params.error);\n    }\n\n    if (params.sessionId) {\n      this.currentStorage.set(\"sessionId\", params.sessionId);\n      this.sessionManager.sessionId = params.sessionId;\n    }\n\n    if (this.sessionManager.sessionId) {\n      const data = await this._authorizeSession();\n      // Fill state with correct info from session\n      // If session is invalid all the data is unset here.\n      this.updateState(data);\n      if (Object.keys(data).length === 0) {\n        // If session is invalid, unset the sessionId from localStorage.\n        this.currentStorage.set(\"sessionId\", \"\");\n      }\n    }\n  }\n\n  async login(params: LoginParams & Partial<BaseRedirectParams>): Promise<{ privKey: string } | null> {\n    if (!params.loginProvider) throw LoginError.invalidLoginParams(`loginProvider is required`);\n\n    // in case of redirect mode, redirect url will be dapp specified\n    // in case of popup mode, redirect url will be sdk specified\n    const defaultParams: BaseRedirectParams = {\n      redirectUrl: this.options.redirectUrl,\n    };\n\n    const loginParams: LoginParams = {\n      loginProvider: params.loginProvider,\n      ...defaultParams,\n      ...params,\n    };\n\n    const dataObject: OpenloginSessionConfig = {\n      actionType: OPENLOGIN_ACTIONS.LOGIN,\n      options: this.options,\n      params: loginParams,\n    };\n\n    const result = await this.openloginHandler(`${this.baseUrl}/start`, dataObject, getTimeout(params.loginProvider));\n    if (this.options.uxMode === UX_MODE.REDIRECT) return null;\n    if (result.error) {\n      this.dappState = result.state;\n      throw LoginError.loginFailed(result.error);\n    }\n    this.sessionManager.sessionId = result.sessionId;\n    this.options.sessionNamespace = result.sessionNamespace;\n    this.currentStorage.set(\"sessionId\", result.sessionId);\n    await this.rehydrateSession();\n    return { privKey: this.privKey };\n  }\n\n  async logout(): Promise<void> {\n    if (!this.sessionManager.sessionId) throw LoginError.userNotLoggedIn();\n    await this.sessionManager.invalidateSession();\n    this.updateState({\n      privKey: \"\",\n      coreKitKey: \"\",\n      coreKitEd25519PrivKey: \"\",\n      ed25519PrivKey: \"\",\n      walletKey: \"\",\n      oAuthPrivateKey: \"\",\n      tKey: \"\",\n      metadataNonce: \"\",\n      keyMode: undefined,\n      userInfo: {\n        name: \"\",\n        profileImage: \"\",\n        dappShare: \"\",\n        idToken: \"\",\n        oAuthIdToken: \"\",\n        oAuthAccessToken: \"\",\n        appState: \"\",\n        email: \"\",\n        verifier: \"\",\n        verifierId: \"\",\n        aggregateVerifier: \"\",\n        typeOfLogin: \"\",\n        isMfaEnabled: false,\n      },\n      authToken: \"\",\n      sessionId: \"\",\n      factorKey: \"\",\n      signatures: [],\n      tssShareIndex: -1,\n      tssPubKey: \"\",\n      tssShare: \"\",\n      tssNonce: -1,\n    });\n\n    this.currentStorage.set(\"sessionId\", \"\");\n  }\n\n  async setupMFA(params: Partial<BaseRedirectParams>): Promise<boolean> {\n    if (!this.sessionId) throw LoginError.userNotLoggedIn();\n\n    // in case of redirect mode, redirect url will be dapp specified\n    // in case of popup mode, redirect url will be sdk specified\n    const defaultParams: BaseRedirectParams = {\n      redirectUrl: this.options.redirectUrl,\n    };\n\n    const dataObject: OpenloginSessionConfig = {\n      actionType: OPENLOGIN_ACTIONS.ENABLE_MFA,\n      options: this.options,\n      params: {\n        ...defaultParams,\n        ...params,\n      },\n      sessionId: this.sessionId,\n    };\n\n    const result = await this.openloginHandler(`${this.baseUrl}/start`, dataObject);\n    if (this.options.uxMode === UX_MODE.REDIRECT) return undefined;\n    this.sessionManager.sessionId = result.sessionId;\n    this.options.sessionNamespace = result.sessionNamespace;\n    this.currentStorage.set(\"sessionId\", result.sessionId);\n    await this.rehydrateSession();\n    return true;\n  }\n\n  async changeSocialFactor(params: SocialMfaModParams & Partial<BaseRedirectParams>): Promise<boolean> {\n    if (!this.sessionId) throw LoginError.userNotLoggedIn();\n\n    // in case of redirect mode, redirect url will be dapp specified\n    // in case of popup mode, redirect url will be sdk specified\n    const defaultParams: BaseRedirectParams = {\n      redirectUrl: this.options.redirectUrl,\n    };\n\n    const dataObject: OpenloginSessionConfig = {\n      actionType: OPENLOGIN_ACTIONS.MODIFY_MFA,\n      options: this.options,\n      params: {\n        ...defaultParams,\n        ...params,\n      },\n      sessionId: this.sessionId,\n    };\n\n    const result = await this.openloginHandler(`${this.baseUrl}/start`, dataObject);\n    if (this.options.uxMode === UX_MODE.REDIRECT) return undefined;\n    this.sessionManager.sessionId = result.sessionId;\n    this.options.sessionNamespace = result.sessionNamespace;\n    this.currentStorage.set(\"sessionId\", result.sessionId);\n    await this.rehydrateSession();\n    return true;\n  }\n\n  getUserInfo(): OpenloginUserInfo {\n    if (!this.sessionManager.sessionId) {\n      throw LoginError.userNotLoggedIn();\n    }\n    return this.state.userInfo;\n  }\n\n  async getLoginId(data: OpenloginSessionConfig): Promise<string> {\n    if (!this.sessionManager) throw InitializationError.notInitialized();\n\n    const loginId = OpenloginSessionManager.generateRandomSessionKey();\n    const loginSessionMgr = new OpenloginSessionManager<OpenloginSessionConfig>({\n      sessionServerBaseUrl: this.options.storageServerUrl,\n      sessionNamespace: this.options.sessionNamespace,\n      sessionTime: 600, // each login key must be used with 10 mins (might be used at the end of popup redirect)\n      sessionId: loginId,\n    });\n\n    await loginSessionMgr.createSession(JSON.parse(JSON.stringify(data)));\n\n    return loginId;\n  }\n\n  private async _authorizeSession(): Promise<OpenloginSessionData> {\n    try {\n      if (!this.sessionManager.sessionId) return {};\n      const result = await this.sessionManager.authorizeSession();\n      return result;\n    } catch (err) {\n      log.error(\"authorization failed\", err);\n      return {};\n    }\n  }\n\n  private updateState(data: Partial<OpenloginSessionData>) {\n    this.state = { ...this.state, ...data };\n  }\n\n  private async rehydrateSession(): Promise<void> {\n    const result = await this._authorizeSession();\n    this.updateState(result);\n  }\n\n  private async openloginHandler(url: string, dataObject: OpenloginSessionConfig, popupTimeout = 1000 * 10): Promise<PopupResponse | undefined> {\n    const loginId = await this.getLoginId(dataObject);\n    const configParams: BaseLoginParams = {\n      loginId,\n      sessionNamespace: this.options.sessionNamespace,\n    };\n\n    if (this.options.uxMode === UX_MODE.REDIRECT) {\n      const loginUrl = constructURL({\n        baseURL: url,\n        hash: { b64Params: jsonToBase64(configParams) },\n      });\n      window.location.href = loginUrl;\n      return undefined;\n    }\n    return new Promise((resolve, reject) => {\n      const loginUrl = constructURL({\n        baseURL: url,\n        hash: { b64Params: jsonToBase64(configParams) },\n      });\n      const currentWindow = new PopupHandler({ url: loginUrl, timeout: popupTimeout });\n\n      currentWindow.on(\"close\", () => {\n        reject(LoginError.popupClosed());\n      });\n\n      currentWindow.listenOnChannel(loginId).then(resolve).catch(reject);\n\n      try {\n        currentWindow.open();\n      } catch (error) {\n        reject(error);\n      }\n    });\n  }\n}\n\nexport default OpenLogin;\n"],"names":["OpenloginError","CustomError","constructor","code","message","_defineProperty","Object","defineProperty","value","toJSON","name","toString","JSON","stringify","InitializationError","fromCode","extraMessage","arguments","length","undefined","messages","invalidParams","notInitialized","LoginError","invalidLoginParams","userNotLoggedIn","popupClosed","loginFailed","popupBlocked","loglevel","getLogger","setLevel","version","whitelistUrl","clientId","appKey","origin","appKeyBuf","Buffer","from","padStart","base64url","encode","getPublic","Error","sig","sign","keccak256","getHashQueryParams","replaceUrl","result","url","URL","window","location","href","searchParams","forEach","key","queryResult","get","queryParams","parse","safeatob","keys","error","log","hash","substring","hashUrl","hashResult","hashParams","cleanUrl","pathname","search","sessionId","sessionNamespace","safebtoa","history","replaceState","_objectSpread","state","as","constructURL","params","baseURL","query","append","h","getPopupFeatures","dualScreenLeft","screenLeft","screenX","dualScreenTop","screenTop","screenY","w","width","innerWidth","document","documentElement","clientWidth","screen","height","innerHeight","clientHeight","systemZoom","left","Math","abs","top","features","isMobileOrTablet","browser","bowser","getParser","navigator","userAgent","platform","getPlatform","type","PLATFORMS_MAP","tablet","mobile","getTimeout","loginProvider","LOGIN_PROVIDER","FACEBOOK","LINE","PopupHandler","EventEmitter","_ref","target","timeout","windowTimer","iClosedWindow","_setupTimer","Number","setInterval","closed","clearInterval","setTimeout","emit","open","_this$window","focus","close","redirect","locationReplaceOnRedirect","replace","listenOnChannel","loginId","securePubSub","SecurePubSub","data","subscribe","cleanup","parsedData","OpenLogin","options","network","OPENLOGIN_NETWORK","SAPPHIRE_MAINNET","buildEnv","BUILD_ENV","PRODUCTION","DEVELOPMENT","TESTING","sdkUrl","addVersionInUrls","useMpc","STAGING","values","TORUS_LEGACY_NETWORK","includes","redirectUrl","protocol","host","uxMode","UX_MODE","REDIRECT","replaceUrlOnRedirect","originData","whiteLabel","loginConfig","mfaSettings","storageServerUrl","storageKey","webauthnTransports","sessionTime","privKey","factorKey","coreKitKey","ed25519PrivKey","coreKitEd25519Key","coreKitEd25519PrivKey","appState","userInfo","dappState","baseUrl","split","init","_storageBaseKey","currentStorage","BrowserStorage","getInstance","sessionManager","OpenloginSessionManager","sessionServerBaseUrl","TESTNET","SAPPHIRE_DEVNET","console","set","_authorizeSession","updateState","login","defaultParams","loginParams","dataObject","actionType","OPENLOGIN_ACTIONS","LOGIN","openloginHandler","rehydrateSession","logout","invalidateSession","walletKey","oAuthPrivateKey","tKey","metadataNonce","keyMode","profileImage","dappShare","idToken","oAuthIdToken","oAuthAccessToken","email","verifier","verifierId","aggregateVerifier","typeOfLogin","isMfaEnabled","authToken","signatures","tssShareIndex","tssPubKey","tssShare","tssNonce","setupMFA","ENABLE_MFA","changeSocialFactor","MODIFY_MFA","getUserInfo","getLoginId","generateRandomSessionKey","loginSessionMgr","createSession","authorizeSession","err","popupTimeout","configParams","loginUrl","b64Params","jsonToBase64","Promise","resolve","reject","currentWindow","on","then","catch"],"mappings":"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"}